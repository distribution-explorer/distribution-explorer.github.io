(function() {
  var fn = function() {
    
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = false;
    
      if (typeof root._bokeh_onload_callbacks === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      
      
    
      var element = document.getElementById("bef375a9-875b-4cf9-bdd8-ea5d9adb2328");
        if (element == null) {
          console.warn("Bokeh: autoload.js configured with elementid 'bef375a9-875b-4cf9-bdd8-ea5d9adb2328' but no matching script tag was found.")
        }
      
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) {
            if (callback != null)
              callback();
          });
        } finally {
          delete root._bokeh_onload_callbacks
        }
        console.debug("Bokeh: all callbacks have finished");
      }
    
      function load_libs(css_urls, js_urls, callback) {
        if (css_urls == null) css_urls = [];
        if (js_urls == null) js_urls = [];
    
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.debug("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.debug("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = css_urls.length + js_urls.length;
    
        function on_load() {
          root._bokeh_is_loading--;
          if (root._bokeh_is_loading === 0) {
            console.debug("Bokeh: all BokehJS libraries/stylesheets loaded");
            run_callbacks()
          }
        }
    
        function on_error() {
          console.error("failed to load " + url);
        }
    
        for (var i = 0; i < css_urls.length; i++) {
          var url = css_urls[i];
          const element = document.createElement("link");
          element.onload = on_load;
          element.onerror = on_error;
          element.rel = "stylesheet";
          element.type = "text/css";
          element.href = url;
          console.debug("Bokeh: injecting link tag for BokehJS stylesheet: ", url);
          document.body.appendChild(element);
        }
    
        const hashes = {"https://cdn.bokeh.org/bokeh/release/bokeh-2.2.2.min.js": "JayppSWSRBsibIZqI8S4vAb1oFgLL0uhNvSn8cmArlOvYOwfFjYeyY5UWwJ+K0SU", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.2.2.min.js": "G0/Tv/Yy/zEPNsnW0Qif/FOsGesd+KIrKg/QLmvQmReuUW9qmSP7mAmr0VpiUNr3", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.2.2.min.js": "VLYHEbLQDk5G1+/4ALU0myoJPMEUsngWry2fzYorFOUmarjGRPLLURaeK/on6JqX"};
    
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var element = document.createElement('script');
          element.onload = on_load;
          element.onerror = on_error;
          element.async = false;
          element.src = url;
          if (url in hashes) {
            element.crossOrigin = "anonymous";
            element.integrity = "sha384-" + hashes[url];
          }
          console.debug("Bokeh: injecting script tag for BokehJS library: ", url);
          document.head.appendChild(element);
        }
      };
    
      function inject_raw_css(css) {
        const element = document.createElement("style");
        element.appendChild(document.createTextNode(css));
        document.body.appendChild(element);
      }
    
      
      var js_urls = ["https://cdn.bokeh.org/bokeh/release/bokeh-2.2.2.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.2.2.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.2.2.min.js"];
      var css_urls = [];
      
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          (function() {
            var fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                    
                  var docs_json = '{"f29bf898-16fb-432d-b7ec-f4f8fbcf0f72":{"roots":{"references":[{"attributes":{},"id":"3914","type":"SaveTool"},{"attributes":{"axis_label":"PDF","formatter":{"id":"3987"},"ticker":{"id":"3908"}},"id":"3907","type":"LinearAxis"},{"attributes":{},"id":"3901","type":"LinearScale"},{"attributes":{},"id":"3911","type":"PanTool"},{"attributes":{"end":1.05,"start":-0.05},"id":"3958","type":"Range1d"},{"attributes":{"bottom_units":"screen","fill_alpha":0.5,"fill_color":"lightgrey","left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","top_units":"screen"},"id":"3950","type":"BoxAnnotation"},{"attributes":{"overlay":{"id":"3917"}},"id":"3913","type":"BoxZoomTool"},{"attributes":{},"id":"3912","type":"WheelZoomTool"},{"attributes":{"axis":{"id":"3907"},"dimension":1,"ticker":null},"id":"3910","type":"Grid"},{"attributes":{"data":{"x":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[400]},"y_c":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[400]}},"selected":{"id":"3994"},"selection_policy":{"id":"3995"}},"id":"3960","type":"ColumnDataSource"},{"attributes":{"axis_label":"y","formatter":{"id":"4000"},"ticker":{"id":"3937"}},"id":"3936","type":"LinearAxis"},{"attributes":{"line_alpha":0.1,"line_color":"#1f77b4","line_width":2,"x":{"field":"x"},"y":{"field":"y_p"}},"id":"3968","type":"Line"},{"attributes":{"active_drag":"auto","active_inspect":"auto","active_multi":null,"active_scroll":"auto","active_tap":"auto","tools":[{"id":"3911"},{"id":"3912"},{"id":"3913"},{"id":"3914"},{"id":"3915"},{"id":"3916"}]},"id":"3918","type":"Toolbar"},{"attributes":{},"id":"3944","type":"PanTool"},{"attributes":{},"id":"3908","type":"BasicTicker"},{"attributes":{},"id":"3899","type":"LinearScale"},{"attributes":{"data_source":{"id":"3959"},"glyph":{"id":"3967"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"3968"},"selection_glyph":null,"view":{"id":"3970"}},"id":"3969","type":"GlyphRenderer"},{"attributes":{"line_color":"#1f77b4","line_width":2,"x":{"field":"x"},"y":{"field":"y_p"}},"id":"3967","type":"Line"},{"attributes":{"height":10},"id":"4012","type":"Spacer"},{"attributes":{"js_property_callbacks":{"change:value":[{"id":"3978"}]},"value":"0","width":70},"id":"3974","type":"TextInput"},{"attributes":{},"id":"3949","type":"HelpTool"},{"attributes":{"axis_label":"y","formatter":{"id":"3989"},"ticker":{"id":"3904"}},"id":"3903","type":"LinearAxis"},{"attributes":{"source":{"id":"3959"}},"id":"3970","type":"CDSView"},{"attributes":{"active_drag":"auto","active_inspect":"auto","active_multi":null,"active_scroll":"auto","active_tap":"auto","tools":[{"id":"3944"},{"id":"3945"},{"id":"3946"},{"id":"3947"},{"id":"3948"},{"id":"3949"}]},"id":"3951","type":"Toolbar"},{"attributes":{"overlay":{"id":"3950"}},"id":"3946","type":"BoxZoomTool"},{"attributes":{"line_alpha":0.1,"line_color":"#1f77b4","line_width":2,"x":{"field":"x"},"y":{"field":"y_c"}},"id":"3963","type":"Line"},{"attributes":{"source":{"id":"3960"}},"id":"3965","type":"CDSView"},{"attributes":{"js_property_callbacks":{"change:value":[{"id":"3981"}]},"value":"10","width":70},"id":"3977","type":"TextInput"},{"attributes":{},"id":"3916","type":"HelpTool"},{"attributes":{"children":[{"id":"4008"},{"id":"4010"}]},"id":"4011","type":"Row"},{"attributes":{},"id":"3994","type":"Selection"},{"attributes":{},"id":"3995","type":"UnionRenderers"},{"attributes":{},"id":"3947","type":"SaveTool"},{"attributes":{"background_fill_alpha":0,"below":[{"id":"3903"}],"border_fill_alpha":0,"center":[{"id":"3906"},{"id":"3910"}],"frame_height":175,"frame_width":300,"left":[{"id":"3907"}],"renderers":[{"id":"3969"}],"title":{"id":"3893"},"toolbar":{"id":"3918"},"toolbar_location":null,"x_range":{"id":"3895"},"x_scale":{"id":"3899"},"y_range":{"id":"3897"},"y_scale":{"id":"3901"}},"id":"3892","subtype":"Figure","type":"Plot"},{"attributes":{"js_property_callbacks":{"change:end":[{"id":"3971"}],"change:start":[{"id":"3971"}]},"range_padding":0},"id":"3895","type":"DataRange1d"},{"attributes":{"axis_label":"CDF","formatter":{"id":"3998"},"ticker":{"id":"3941"}},"id":"3940","type":"LinearAxis"},{"attributes":{},"id":"3948","type":"ResetTool"},{"attributes":{},"id":"3934","type":"LinearScale"},{"attributes":{},"id":"3915","type":"ResetTool"},{"attributes":{"children":[{"id":"3974"},{"id":"3972"},{"id":"3976"}]},"id":"3982","type":"Row"},{"attributes":{},"id":"3987","type":"BasicTickFormatter"},{"attributes":{"args":{"arg1":{"id":"3972"},"arg2":{"id":"3973"},"arg3":{"id":"3972"},"discrete":false,"dist":"uniform","n":400,"source_c":{"id":"3960"},"source_p":{"id":"3959"},"xrange":{"id":"3895"}},"code":"function linspace(start, stop, n) {\\n\\tvar x = [];\\n\\tvar currValue = start;\\n\\tvar step = (stop - start) / (n - 1);\\n\\tfor (var i = 0; i &lt; n; i++) {\\n\\t\\tx.push(currValue);\\n\\t\\tcurrValue += step;\\n\\t}\\n\\treturn x;\\n}\\n\\nfunction update_y_p(probFun, x_p, arg1, arg2, arg3) {\\n    // Compute PMF/PDF\\n    var y_p = [];\\n    for (var i = 0; i &lt; x_p.length; i++) {\\n      y_p.push(probFun(x_p[i], arg1, arg2, arg3));\\n    }\\n\\n    return y_p;\\n}\\n\\nfunction update_y_c_continuous(cdfFun, x_c, arg1, arg2, arg3) {\\n    var y_c = [];\\n    for (var i = 0; i &lt; x_c.length; i ++)\\n        y_c.push(cdfFun(x_c[i], arg1, arg2, arg3));\\n\\n    return y_c;\\n}\\n\\nfunction probFun(x, alpha, beta, {}) {\\n    if (beta &lt;= alpha || x &lt; alpha || x &gt; beta) return NaN;\\n\\n    return 1.0 / (beta - alpha);\\n}\\n\\nfunction cdfFun(x, alpha, beta, {}) {\\n    if (beta &lt;= alpha || x &lt;= alpha) return 0.0;\\n    if (x &gt;= beta) return 1.0;\\n    return (x - alpha) / (beta - alpha);\\n}\\n\\n// Extract data from sources\\nvar data_p = source_p.data;\\nvar data_c = source_c.data;\\nvar x_p = data_p[&#x27;x&#x27;];\\nvar y_p = data_p[&#x27;y_p&#x27;];\\nvar x_c = data_c[&#x27;x&#x27;];\\nvar y_c = data_c[&#x27;y_c&#x27;];\\nvar xRangeMin = xrange.start;\\nvar xRangeMax = xrange.end;\\n\\n// Make corrections for start and end points based on support\\n// We&#x27;re not doing this now because we want to allow zooming\\n// JS codes now make anything outside of support NaN.\\n// if (dist == &#x27;lognormal&#x27; \\n//     || dist == &#x27;gamma&#x27; \\n//     || dist == &#x27;exponential&#x27; \\n//     || dist == &#x27;inv_gamma&#x27;\\n//     || dist == &#x27;weibull&#x27;) {\\n// \\txRangeMin = 0.0;\\n// }\\n// else if (dist == &#x27;beta&#x27;) { \\n//     xRangeMin = 0.0;\\n//     xRangeMax = 1.0;\\n// }\\n\\n// x-values to evaluate PDF and CDF\\nx_p = linspace(xRangeMin, xRangeMax, n);\\nx_c = x_p;\\n\\n// Update sources with new x-values\\nsource_p.data[&#x27;x&#x27;] = x_p;\\nsource_c.data[&#x27;x&#x27;] = x_c;\\n\\n// Update the PDF and CDF\\nsource_p.data[&#x27;y_p&#x27;] = update_y_p(probFun, \\n    x_p, arg1.value, arg2.value, arg3.value);\\nsource_c.data[&#x27;y_c&#x27;] = update_y_c_continuous(cdfFun, \\n    x_c, arg1.value, arg2.value, arg3.value);\\n\\nsource_p.change.emit();\\nsource_c.change.emit();\\n"},"id":"3971","type":"CustomJS"},{"attributes":{},"id":"3992","type":"Selection"},{"attributes":{"end":10,"format":"0[.]00","js_property_callbacks":{"change:value":[{"id":"3971"}]},"start":0,"step":0.01,"title":"\\u03b2","value":10},"id":"3973","type":"Slider"},{"attributes":{"data":{"x":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[400]},"y_p":{"__ndarray__":"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACamZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/mpmZmZmZuT+amZmZmZm5P5qZmZmZmbk/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=","dtype":"float64","order":"little","shape":[400]}},"selected":{"id":"3992"},"selection_policy":{"id":"3993"}},"id":"3959","type":"ColumnDataSource"},{"attributes":{},"id":"3993","type":"UnionRenderers"},{"attributes":{"children":[{"id":"3975"},{"id":"3973"},{"id":"3977"}]},"id":"3983","type":"Row"},{"attributes":{},"id":"3897","type":"DataRange1d"},{"attributes":{"args":{"max_value":"Infinity","min_value":"-Infinity","slider":{"id":"3972"}},"code":"\\nslider.end = Math.min(max_value, Number(cb_obj.value));\\n"},"id":"3979","type":"CustomJS"},{"attributes":{"js_property_callbacks":{"change:value":[{"id":"3979"}]},"value":"10","width":70},"id":"3976","type":"TextInput"},{"attributes":{"toolbars":[{"id":"3918"},{"id":"3951"}],"tools":[{"id":"3911"},{"id":"3912"},{"id":"3913"},{"id":"3914"},{"id":"3915"},{"id":"3916"},{"id":"3944"},{"id":"3945"},{"id":"3946"},{"id":"3947"},{"id":"3948"},{"id":"3949"}]},"id":"4009","type":"ProxyToolbar"},{"attributes":{"args":{"max_value":"Infinity","min_value":"-Infinity","slider":{"id":"3972"}},"code":"\\n    slider.start = Math.max(min_value, Number(cb_obj.value));\\n"},"id":"3978","type":"CustomJS"},{"attributes":{"end":10,"format":"0[.]00","js_property_callbacks":{"change:value":[{"id":"3971"}]},"start":0,"step":0.01,"title":"\\u03b1","value":0},"id":"3972","type":"Slider"},{"attributes":{"args":{"max_value":"Infinity","min_value":"-Infinity","slider":{"id":"3973"}},"code":"\\nslider.end = Math.min(max_value, Number(cb_obj.value));\\n"},"id":"3981","type":"CustomJS"},{"attributes":{"axis":{"id":"3936"},"ticker":null},"id":"3939","type":"Grid"},{"attributes":{"args":{"max_value":"Infinity","min_value":"-Infinity","slider":{"id":"3973"}},"code":"\\n    slider.start = Math.max(min_value, Number(cb_obj.value));\\n"},"id":"3980","type":"CustomJS"},{"attributes":{},"id":"3904","type":"BasicTicker"},{"attributes":{},"id":"3932","type":"LinearScale"},{"attributes":{"children":[[{"id":"3892"},0,0],[{"id":"3985"},0,1],[{"id":"3925"},0,2]]},"id":"4008","type":"GridBox"},{"attributes":{"toolbar":{"id":"4009"}},"id":"4010","type":"ToolbarBox"},{"attributes":{"children":[{"id":"3982"},{"id":"3983"}]},"id":"3984","type":"Column"},{"attributes":{"js_property_callbacks":{"change:value":[{"id":"3980"}]},"value":"0","width":70},"id":"3975","type":"TextInput"},{"attributes":{},"id":"3945","type":"WheelZoomTool"},{"attributes":{"axis":{"id":"3940"},"dimension":1,"ticker":null},"id":"3943","type":"Grid"},{"attributes":{"width":30},"id":"3985","type":"Spacer"},{"attributes":{"bottom_units":"screen","fill_alpha":0.5,"fill_color":"lightgrey","left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","top_units":"screen"},"id":"3917","type":"BoxAnnotation"},{"attributes":{},"id":"3989","type":"BasicTickFormatter"},{"attributes":{},"id":"3941","type":"BasicTicker"},{"attributes":{},"id":"3998","type":"BasicTickFormatter"},{"attributes":{},"id":"3937","type":"BasicTicker"},{"attributes":{"line_color":"#1f77b4","line_width":2,"x":{"field":"x"},"y":{"field":"y_c"}},"id":"3962","type":"Line"},{"attributes":{"text":"Uniform"},"id":"3893","type":"Title"},{"attributes":{"background_fill_alpha":0,"below":[{"id":"3936"}],"border_fill_alpha":0,"center":[{"id":"3939"},{"id":"3943"}],"frame_height":175,"frame_width":300,"left":[{"id":"3940"}],"renderers":[{"id":"3964"}],"title":{"id":"3926"},"toolbar":{"id":"3951"},"toolbar_location":null,"x_range":{"id":"3895"},"x_scale":{"id":"3932"},"y_range":{"id":"3958"},"y_scale":{"id":"3934"}},"id":"3925","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"4000","type":"BasicTickFormatter"},{"attributes":{"data_source":{"id":"3960"},"glyph":{"id":"3962"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"3963"},"selection_glyph":null,"view":{"id":"3965"}},"id":"3964","type":"GlyphRenderer"},{"attributes":{"axis":{"id":"3903"},"ticker":null},"id":"3906","type":"Grid"},{"attributes":{"children":[{"id":"3984"},{"id":"4012"},{"id":"4011"}]},"id":"4013","type":"Column"},{"attributes":{"text":" "},"id":"3926","type":"Title"}],"root_ids":["4013"]},"title":"Bokeh Application","version":"2.2.2"}}';
                  var render_items = [{"docid":"f29bf898-16fb-432d-b7ec-f4f8fbcf0f72","root_ids":["4013"],"roots":{"4013":"bef375a9-875b-4cf9-bdd8-ea5d9adb2328"}}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    var attempts = 0;
                    var timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        clearInterval(timer);
                        embed_document(root);
                      } else {
                        attempts++;
                        if (attempts > 100) {
                          clearInterval(timer);
                          console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                        }
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
        function(Bokeh) {
        
        
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
        
      }
    
      if (root._bokeh_is_loading === 0) {
        console.debug("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(css_urls, js_urls, function() {
          console.debug("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();
(function() {
  var fn = function() {
    
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = false;
    
      if (typeof root._bokeh_onload_callbacks === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      
      
    
      var element = document.getElementById("beb804d4-099f-4da4-b532-af4dc91513a2");
        if (element == null) {
          console.warn("Bokeh: autoload.js configured with elementid 'beb804d4-099f-4da4-b532-af4dc91513a2' but no matching script tag was found.")
        }
      
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) {
            if (callback != null)
              callback();
          });
        } finally {
          delete root._bokeh_onload_callbacks
        }
        console.debug("Bokeh: all callbacks have finished");
      }
    
      function load_libs(css_urls, js_urls, callback) {
        if (css_urls == null) css_urls = [];
        if (js_urls == null) js_urls = [];
    
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.debug("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.debug("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = css_urls.length + js_urls.length;
    
        function on_load() {
          root._bokeh_is_loading--;
          if (root._bokeh_is_loading === 0) {
            console.debug("Bokeh: all BokehJS libraries/stylesheets loaded");
            run_callbacks()
          }
        }
    
        function on_error() {
          console.error("failed to load " + url);
        }
    
        for (var i = 0; i < css_urls.length; i++) {
          var url = css_urls[i];
          const element = document.createElement("link");
          element.onload = on_load;
          element.onerror = on_error;
          element.rel = "stylesheet";
          element.type = "text/css";
          element.href = url;
          console.debug("Bokeh: injecting link tag for BokehJS stylesheet: ", url);
          document.body.appendChild(element);
        }
    
        const hashes = {"https://cdn.bokeh.org/bokeh/release/bokeh-2.1.1.min.js": "kLr4fYcqcSpbuI95brIH3vnnYCquzzSxHPU6XGQCIkQRGJwhg0StNbj1eegrHs12", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.1.1.min.js": "xIGPmVtaOm+z0BqfSOMn4lOR6ciex448GIKG4eE61LsAvmGj48XcMQZtKcE/UXZe", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.1.1.min.js": "Dc9u1wF/0zApGIWoBbH77iWEHtdmkuYWG839Uzmv8y8yBLXebjO9ZnERsde5Ln/P", "https://cdn.bokeh.org/bokeh/release/bokeh-gl-2.1.1.min.js": "cT9JaBz7GiRXdENrJLZNSC6eMNF3nh3fa5fTF51Svp+ukxPdwcU5kGXGPBgDCa2j"};
    
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var element = document.createElement('script');
          element.onload = on_load;
          element.onerror = on_error;
          element.async = false;
          element.src = url;
          if (url in hashes) {
            element.crossOrigin = "anonymous";
            element.integrity = "sha384-" + hashes[url];
          }
          console.debug("Bokeh: injecting script tag for BokehJS library: ", url);
          document.head.appendChild(element);
        }
      };
    
      function inject_raw_css(css) {
        const element = document.createElement("style");
        element.appendChild(document.createTextNode(css));
        document.body.appendChild(element);
      }
    
      
      var js_urls = ["https://cdn.bokeh.org/bokeh/release/bokeh-2.1.1.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.1.1.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.1.1.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-gl-2.1.1.min.js"];
      var css_urls = [];
      
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          (function() {
            var fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                    
                  var docs_json = '{&quot;6b3e6729-c690-4992-a63d-95c273745c15&quot;:{&quot;roots&quot;:{&quot;references&quot;:[{&quot;attributes&quot;:{&quot;children&quot;:[{&quot;id&quot;:&quot;1986&quot;},{&quot;id&quot;:&quot;2014&quot;},{&quot;id&quot;:&quot;2013&quot;}]},&quot;id&quot;:&quot;2015&quot;,&quot;type&quot;:&quot;Column&quot;},{&quot;attributes&quot;:{&quot;data_source&quot;:{&quot;id&quot;:&quot;1962&quot;},&quot;glyph&quot;:{&quot;id&quot;:&quot;1964&quot;},&quot;hover_glyph&quot;:null,&quot;muted_glyph&quot;:null,&quot;nonselection_glyph&quot;:{&quot;id&quot;:&quot;1965&quot;},&quot;selection_glyph&quot;:null,&quot;view&quot;:{&quot;id&quot;:&quot;1967&quot;}},&quot;id&quot;:&quot;1966&quot;,&quot;type&quot;:&quot;GlyphRenderer&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1989&quot;,&quot;type&quot;:&quot;BasicTickFormatter&quot;},{&quot;attributes&quot;:{&quot;children&quot;:[{&quot;id&quot;:&quot;1984&quot;},{&quot;id&quot;:&quot;1985&quot;}]},&quot;id&quot;:&quot;1986&quot;,&quot;type&quot;:&quot;Column&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1913&quot;,&quot;type&quot;:&quot;PanTool&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1914&quot;,&quot;type&quot;:&quot;WheelZoomTool&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1991&quot;,&quot;type&quot;:&quot;BasicTickFormatter&quot;},{&quot;attributes&quot;:{&quot;source&quot;:{&quot;id&quot;:&quot;1962&quot;}},&quot;id&quot;:&quot;1967&quot;,&quot;type&quot;:&quot;CDSView&quot;},{&quot;attributes&quot;:{&quot;line_color&quot;:&quot;#1f77b4&quot;,&quot;line_width&quot;:2,&quot;x&quot;:{&quot;field&quot;:&quot;x&quot;},&quot;y&quot;:{&quot;field&quot;:&quot;y_p&quot;}},&quot;id&quot;:&quot;1969&quot;,&quot;type&quot;:&quot;Line&quot;},{&quot;attributes&quot;:{&quot;overlay&quot;:{&quot;id&quot;:&quot;1919&quot;}},&quot;id&quot;:&quot;1915&quot;,&quot;type&quot;:&quot;BoxZoomTool&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1993&quot;,&quot;type&quot;:&quot;UnionRenderers&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1916&quot;,&quot;type&quot;:&quot;SaveTool&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1917&quot;,&quot;type&quot;:&quot;ResetTool&quot;},{&quot;attributes&quot;:{&quot;source&quot;:{&quot;id&quot;:&quot;1961&quot;}},&quot;id&quot;:&quot;1972&quot;,&quot;type&quot;:&quot;CDSView&quot;},{&quot;attributes&quot;:{&quot;axis_label&quot;:&quot;y&quot;,&quot;formatter&quot;:{&quot;id&quot;:&quot;2000&quot;},&quot;ticker&quot;:{&quot;id&quot;:&quot;1939&quot;}},&quot;id&quot;:&quot;1938&quot;,&quot;type&quot;:&quot;LinearAxis&quot;},{&quot;attributes&quot;:{&quot;end&quot;:1.0,&quot;format&quot;:&quot;0[.]00&quot;,&quot;js_property_callbacks&quot;:{&quot;change:value&quot;:[{&quot;id&quot;:&quot;1973&quot;}]},&quot;start&quot;:0.1,&quot;step&quot;:0.01,&quot;title&quot;:&quot;\\u03c3&quot;,&quot;value&quot;:0.2},&quot;id&quot;:&quot;1975&quot;,&quot;type&quot;:&quot;Slider&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1939&quot;,&quot;type&quot;:&quot;BasicTicker&quot;},{&quot;attributes&quot;:{&quot;line_alpha&quot;:0.1,&quot;line_color&quot;:&quot;#1f77b4&quot;,&quot;line_width&quot;:2,&quot;x&quot;:{&quot;field&quot;:&quot;x&quot;},&quot;y&quot;:{&quot;field&quot;:&quot;y_c&quot;}},&quot;id&quot;:&quot;1965&quot;,&quot;type&quot;:&quot;Line&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1936&quot;,&quot;type&quot;:&quot;LinearScale&quot;},{&quot;attributes&quot;:{&quot;data_source&quot;:{&quot;id&quot;:&quot;1961&quot;},&quot;glyph&quot;:{&quot;id&quot;:&quot;1969&quot;},&quot;hover_glyph&quot;:null,&quot;muted_glyph&quot;:null,&quot;nonselection_glyph&quot;:{&quot;id&quot;:&quot;1970&quot;},&quot;selection_glyph&quot;:null,&quot;view&quot;:{&quot;id&quot;:&quot;1972&quot;}},&quot;id&quot;:&quot;1971&quot;,&quot;type&quot;:&quot;GlyphRenderer&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1918&quot;,&quot;type&quot;:&quot;HelpTool&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1934&quot;,&quot;type&quot;:&quot;LinearScale&quot;},{&quot;attributes&quot;:{&quot;args&quot;:{&quot;arg1&quot;:{&quot;id&quot;:&quot;1974&quot;},&quot;arg2&quot;:{&quot;id&quot;:&quot;1975&quot;},&quot;arg3&quot;:{&quot;id&quot;:&quot;1974&quot;},&quot;discrete&quot;:false,&quot;dist&quot;:&quot;cauchy&quot;,&quot;n&quot;:400,&quot;source_c&quot;:{&quot;id&quot;:&quot;1962&quot;},&quot;source_p&quot;:{&quot;id&quot;:&quot;1961&quot;},&quot;xrange&quot;:{&quot;id&quot;:&quot;1897&quot;}},&quot;code&quot;:&quot;function linspace(start, stop, n) {\\n\\tvar x = [];\\n\\tvar currValue = start;\\n\\tvar step = (stop - start) / (n - 1);\\n\\tfor (var i = 0; i &lt; n; i++) {\\n\\t\\tx.push(currValue);\\n\\t\\tcurrValue += step;\\n\\t}\\n\\treturn x;\\n}\\n\\nfunction update_y_p(probFun, x_p, arg1, arg2, arg3) {\\n    // Compute PMF/PDF\\n    var y_p = [];\\n    for (var i = 0; i &lt; x_p.length; i++) {\\n      y_p.push(probFun(x_p[i], arg1, arg2, arg3));\\n    }\\n\\n    return y_p;\\n}\\n\\nfunction update_y_c_continuous(cdfFun, x_c, arg1, arg2, arg3) {\\n    var y_c = [];\\n    for (var i = 0; i &lt; x_c.length; i ++)\\n        y_c.push(cdfFun(x_c[i], arg1, arg2, arg3));\\n\\n    return y_c;\\n}\\n\\nfunction probFun(x, mu, sigma, {}) {\\n    return 1 / Math.PI / sigma / (1 + Math.pow((x - mu) / sigma, 2));\\n}\\n\\nfunction cdfFun(x, mu, sigma, {}) {\\n    return 0.5 + Math.atan((x - mu) / sigma) / Math.PI;\\n}\\n\\n// Extract data from sources\\nvar data_p = source_p.data;\\nvar data_c = source_c.data;\\nvar x_p = data_p[&#x27;x&#x27;];\\nvar y_p = data_p[&#x27;y_p&#x27;];\\nvar x_c = data_c[&#x27;x&#x27;];\\nvar y_c = data_c[&#x27;y_c&#x27;];\\nvar xRangeMin = xrange.start;\\nvar xRangeMax = xrange.end;\\n\\n// Make corrections for start and end points based on support\\n// We&#x27;re not doing this now because we want to allow zooming\\n// JS codes now make anything outside of support NaN.\\n// if (dist == &#x27;lognormal&#x27; \\n//     || dist == &#x27;gamma&#x27; \\n//     || dist == &#x27;exponential&#x27; \\n//     || dist == &#x27;inv_gamma&#x27;\\n//     || dist == &#x27;weibull&#x27;) {\\n// \\txRangeMin = 0.0;\\n// }\\n// else if (dist == &#x27;beta&#x27;) { \\n//     xRangeMin = 0.0;\\n//     xRangeMax = 1.0;\\n// }\\n\\n// x-values to evaluate PDF and CDF\\nx_p = linspace(xRangeMin, xRangeMax, n);\\nx_c = x_p;\\n\\n// Update sources with new x-values\\nsource_p.data[&#x27;x&#x27;] = x_p;\\nsource_c.data[&#x27;x&#x27;] = x_c;\\n\\n// Update the PDF and CDF\\nsource_p.data[&#x27;y_p&#x27;] = update_y_p(probFun, \\n    x_p, arg1.value, arg2.value, arg3.value);\\nsource_c.data[&#x27;y_c&#x27;] = update_y_c_continuous(cdfFun, \\n    x_c, arg1.value, arg2.value, arg3.value);\\n\\nsource_p.change.emit();\\nsource_c.change.emit();\\n&quot;},&quot;id&quot;:&quot;1973&quot;,&quot;type&quot;:&quot;CustomJS&quot;},{&quot;attributes&quot;:{&quot;data&quot;:{&quot;x&quot;:{&quot;__ndarray__&quot;:&quot;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&quot;,&quot;dtype&quot;:&quot;float64&quot;,&quot;order&quot;:&quot;little&quot;,&quot;shape&quot;:[400]},&quot;y_p&quot;:{&quot;__ndarray__&quot;:&quot;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&quot;,&quot;dtype&quot;:&quot;float64&quot;,&quot;order&quot;:&quot;little&quot;,&quot;shape&quot;:[400]}},&quot;selected&quot;:{&quot;id&quot;:&quot;1994&quot;},&quot;selection_policy&quot;:{&quot;id&quot;:&quot;1993&quot;}},&quot;id&quot;:&quot;1961&quot;,&quot;type&quot;:&quot;ColumnDataSource&quot;},{&quot;attributes&quot;:{&quot;line_alpha&quot;:0.1,&quot;line_color&quot;:&quot;#1f77b4&quot;,&quot;line_width&quot;:2,&quot;x&quot;:{&quot;field&quot;:&quot;x&quot;},&quot;y&quot;:{&quot;field&quot;:&quot;y_p&quot;}},&quot;id&quot;:&quot;1970&quot;,&quot;type&quot;:&quot;Line&quot;},{&quot;attributes&quot;:{&quot;data&quot;:{&quot;x&quot;:{&quot;__ndarray__&quot;:&quot;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&quot;,&quot;dtype&quot;:&quot;float64&quot;,&quot;order&quot;:&quot;little&quot;,&quot;shape&quot;:[400]},&quot;y_c&quot;:{&quot;__ndarray__&quot;:&quot;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&quot;,&quot;dtype&quot;:&quot;float64&quot;,&quot;order&quot;:&quot;little&quot;,&quot;shape&quot;:[400]}},&quot;selected&quot;:{&quot;id&quot;:&quot;1997&quot;},&quot;selection_policy&quot;:{&quot;id&quot;:&quot;1996&quot;}},&quot;id&quot;:&quot;1962&quot;,&quot;type&quot;:&quot;ColumnDataSource&quot;},{&quot;attributes&quot;:{&quot;active_drag&quot;:&quot;auto&quot;,&quot;active_inspect&quot;:&quot;auto&quot;,&quot;active_multi&quot;:null,&quot;active_scroll&quot;:&quot;auto&quot;,&quot;active_tap&quot;:&quot;auto&quot;,&quot;tools&quot;:[{&quot;id&quot;:&quot;1913&quot;},{&quot;id&quot;:&quot;1914&quot;},{&quot;id&quot;:&quot;1915&quot;},{&quot;id&quot;:&quot;1916&quot;},{&quot;id&quot;:&quot;1917&quot;},{&quot;id&quot;:&quot;1918&quot;}]},&quot;id&quot;:&quot;1920&quot;,&quot;type&quot;:&quot;Toolbar&quot;},{&quot;attributes&quot;:{&quot;end&quot;:0.5,&quot;format&quot;:&quot;0[.]00&quot;,&quot;js_property_callbacks&quot;:{&quot;change:value&quot;:[{&quot;id&quot;:&quot;1973&quot;}]},&quot;start&quot;:-0.5,&quot;step&quot;:0.01,&quot;title&quot;:&quot;\\u00b5&quot;,&quot;value&quot;:0},&quot;id&quot;:&quot;1974&quot;,&quot;type&quot;:&quot;Slider&quot;},{&quot;attributes&quot;:{&quot;bottom_units&quot;:&quot;screen&quot;,&quot;fill_alpha&quot;:0.5,&quot;fill_color&quot;:&quot;lightgrey&quot;,&quot;left_units&quot;:&quot;screen&quot;,&quot;level&quot;:&quot;overlay&quot;,&quot;line_alpha&quot;:1.0,&quot;line_color&quot;:&quot;black&quot;,&quot;line_dash&quot;:[4,4],&quot;line_width&quot;:2,&quot;right_units&quot;:&quot;screen&quot;,&quot;top_units&quot;:&quot;screen&quot;},&quot;id&quot;:&quot;1919&quot;,&quot;type&quot;:&quot;BoxAnnotation&quot;},{&quot;attributes&quot;:{&quot;js_property_callbacks&quot;:{&quot;change:value&quot;:[{&quot;id&quot;:&quot;1980&quot;}]},&quot;value&quot;:&quot;-0.5&quot;,&quot;width&quot;:70},&quot;id&quot;:&quot;1976&quot;,&quot;type&quot;:&quot;TextInput&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1994&quot;,&quot;type&quot;:&quot;Selection&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1946&quot;,&quot;type&quot;:&quot;PanTool&quot;},{&quot;attributes&quot;:{&quot;axis&quot;:{&quot;id&quot;:&quot;1942&quot;},&quot;dimension&quot;:1,&quot;ticker&quot;:null},&quot;id&quot;:&quot;1945&quot;,&quot;type&quot;:&quot;Grid&quot;},{&quot;attributes&quot;:{&quot;js_property_callbacks&quot;:{&quot;change:end&quot;:[{&quot;id&quot;:&quot;1973&quot;}],&quot;change:start&quot;:[{&quot;id&quot;:&quot;1973&quot;}]},&quot;range_padding&quot;:0},&quot;id&quot;:&quot;1897&quot;,&quot;type&quot;:&quot;DataRange1d&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1947&quot;,&quot;type&quot;:&quot;WheelZoomTool&quot;},{&quot;attributes&quot;:{&quot;below&quot;:[{&quot;id&quot;:&quot;1905&quot;}],&quot;center&quot;:[{&quot;id&quot;:&quot;1908&quot;},{&quot;id&quot;:&quot;1912&quot;}],&quot;frame_height&quot;:175,&quot;frame_width&quot;:300,&quot;left&quot;:[{&quot;id&quot;:&quot;1909&quot;}],&quot;renderers&quot;:[{&quot;id&quot;:&quot;1971&quot;}],&quot;title&quot;:{&quot;id&quot;:&quot;1895&quot;},&quot;toolbar&quot;:{&quot;id&quot;:&quot;1920&quot;},&quot;toolbar_location&quot;:null,&quot;x_range&quot;:{&quot;id&quot;:&quot;1897&quot;},&quot;x_scale&quot;:{&quot;id&quot;:&quot;1901&quot;},&quot;y_range&quot;:{&quot;id&quot;:&quot;1899&quot;},&quot;y_scale&quot;:{&quot;id&quot;:&quot;1903&quot;}},&quot;id&quot;:&quot;1894&quot;,&quot;subtype&quot;:&quot;Figure&quot;,&quot;type&quot;:&quot;Plot&quot;},{&quot;attributes&quot;:{&quot;js_property_callbacks&quot;:{&quot;change:value&quot;:[{&quot;id&quot;:&quot;1982&quot;}]},&quot;value&quot;:&quot;0.1&quot;,&quot;width&quot;:70},&quot;id&quot;:&quot;1977&quot;,&quot;type&quot;:&quot;TextInput&quot;},{&quot;attributes&quot;:{&quot;axis&quot;:{&quot;id&quot;:&quot;1938&quot;},&quot;ticker&quot;:null},&quot;id&quot;:&quot;1941&quot;,&quot;type&quot;:&quot;Grid&quot;},{&quot;attributes&quot;:{&quot;overlay&quot;:{&quot;id&quot;:&quot;1952&quot;}},&quot;id&quot;:&quot;1948&quot;,&quot;type&quot;:&quot;BoxZoomTool&quot;},{&quot;attributes&quot;:{&quot;text&quot;:&quot;Cauchy&quot;},&quot;id&quot;:&quot;1895&quot;,&quot;type&quot;:&quot;Title&quot;},{&quot;attributes&quot;:{&quot;children&quot;:[{&quot;id&quot;:&quot;1976&quot;},{&quot;id&quot;:&quot;1974&quot;},{&quot;id&quot;:&quot;1978&quot;}]},&quot;id&quot;:&quot;1984&quot;,&quot;type&quot;:&quot;Row&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1943&quot;,&quot;type&quot;:&quot;BasicTicker&quot;},{&quot;attributes&quot;:{&quot;text&quot;:&quot; &quot;},&quot;id&quot;:&quot;1928&quot;,&quot;type&quot;:&quot;Title&quot;},{&quot;attributes&quot;:{&quot;js_property_callbacks&quot;:{&quot;change:value&quot;:[{&quot;id&quot;:&quot;1981&quot;}]},&quot;value&quot;:&quot;0.5&quot;,&quot;width&quot;:70},&quot;id&quot;:&quot;1978&quot;,&quot;type&quot;:&quot;TextInput&quot;},{&quot;attributes&quot;:{&quot;axis_label&quot;:&quot;CDF&quot;,&quot;formatter&quot;:{&quot;id&quot;:&quot;2002&quot;},&quot;ticker&quot;:{&quot;id&quot;:&quot;1943&quot;}},&quot;id&quot;:&quot;1942&quot;,&quot;type&quot;:&quot;LinearAxis&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1949&quot;,&quot;type&quot;:&quot;SaveTool&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1901&quot;,&quot;type&quot;:&quot;LinearScale&quot;},{&quot;attributes&quot;:{&quot;below&quot;:[{&quot;id&quot;:&quot;1938&quot;}],&quot;center&quot;:[{&quot;id&quot;:&quot;1941&quot;},{&quot;id&quot;:&quot;1945&quot;}],&quot;frame_height&quot;:175,&quot;frame_width&quot;:300,&quot;left&quot;:[{&quot;id&quot;:&quot;1942&quot;}],&quot;renderers&quot;:[{&quot;id&quot;:&quot;1966&quot;}],&quot;title&quot;:{&quot;id&quot;:&quot;1928&quot;},&quot;toolbar&quot;:{&quot;id&quot;:&quot;1953&quot;},&quot;toolbar_location&quot;:null,&quot;x_range&quot;:{&quot;id&quot;:&quot;1897&quot;},&quot;x_scale&quot;:{&quot;id&quot;:&quot;1934&quot;},&quot;y_range&quot;:{&quot;id&quot;:&quot;1960&quot;},&quot;y_scale&quot;:{&quot;id&quot;:&quot;1936&quot;}},&quot;id&quot;:&quot;1927&quot;,&quot;subtype&quot;:&quot;Figure&quot;,&quot;type&quot;:&quot;Plot&quot;},{&quot;attributes&quot;:{&quot;args&quot;:{&quot;max_value&quot;:&quot;Infinity&quot;,&quot;min_value&quot;:&quot;-Infinity&quot;,&quot;slider&quot;:{&quot;id&quot;:&quot;1974&quot;}},&quot;code&quot;:&quot;\\n    slider.start = Math.max(min_value, Number(cb_obj.value));\\n&quot;},&quot;id&quot;:&quot;1980&quot;,&quot;type&quot;:&quot;CustomJS&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1950&quot;,&quot;type&quot;:&quot;ResetTool&quot;},{&quot;attributes&quot;:{&quot;js_property_callbacks&quot;:{&quot;change:value&quot;:[{&quot;id&quot;:&quot;1983&quot;}]},&quot;value&quot;:&quot;1.0&quot;,&quot;width&quot;:70},&quot;id&quot;:&quot;1979&quot;,&quot;type&quot;:&quot;TextInput&quot;},{&quot;attributes&quot;:{&quot;line_color&quot;:&quot;#1f77b4&quot;,&quot;line_width&quot;:2,&quot;x&quot;:{&quot;field&quot;:&quot;x&quot;},&quot;y&quot;:{&quot;field&quot;:&quot;y_c&quot;}},&quot;id&quot;:&quot;1964&quot;,&quot;type&quot;:&quot;Line&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1899&quot;,&quot;type&quot;:&quot;DataRange1d&quot;},{&quot;attributes&quot;:{&quot;children&quot;:[{&quot;id&quot;:&quot;1977&quot;},{&quot;id&quot;:&quot;1975&quot;},{&quot;id&quot;:&quot;1979&quot;}]},&quot;id&quot;:&quot;1985&quot;,&quot;type&quot;:&quot;Row&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1951&quot;,&quot;type&quot;:&quot;HelpTool&quot;},{&quot;attributes&quot;:{&quot;width&quot;:30},&quot;id&quot;:&quot;1987&quot;,&quot;type&quot;:&quot;Spacer&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1903&quot;,&quot;type&quot;:&quot;LinearScale&quot;},{&quot;attributes&quot;:{&quot;args&quot;:{&quot;max_value&quot;:&quot;Infinity&quot;,&quot;min_value&quot;:&quot;-Infinity&quot;,&quot;slider&quot;:{&quot;id&quot;:&quot;1974&quot;}},&quot;code&quot;:&quot;\\nslider.end = Math.min(max_value, Number(cb_obj.value));\\n&quot;},&quot;id&quot;:&quot;1981&quot;,&quot;type&quot;:&quot;CustomJS&quot;},{&quot;attributes&quot;:{&quot;active_drag&quot;:&quot;auto&quot;,&quot;active_inspect&quot;:&quot;auto&quot;,&quot;active_multi&quot;:null,&quot;active_scroll&quot;:&quot;auto&quot;,&quot;active_tap&quot;:&quot;auto&quot;,&quot;tools&quot;:[{&quot;id&quot;:&quot;1946&quot;},{&quot;id&quot;:&quot;1947&quot;},{&quot;id&quot;:&quot;1948&quot;},{&quot;id&quot;:&quot;1949&quot;},{&quot;id&quot;:&quot;1950&quot;},{&quot;id&quot;:&quot;1951&quot;}]},&quot;id&quot;:&quot;1953&quot;,&quot;type&quot;:&quot;Toolbar&quot;},{&quot;attributes&quot;:{&quot;height&quot;:10},&quot;id&quot;:&quot;2014&quot;,&quot;type&quot;:&quot;Spacer&quot;},{&quot;attributes&quot;:{&quot;args&quot;:{&quot;max_value&quot;:&quot;Infinity&quot;,&quot;min_value&quot;:&quot;0&quot;,&quot;slider&quot;:{&quot;id&quot;:&quot;1975&quot;}},&quot;code&quot;:&quot;\\n    slider.start = Math.max(min_value, Number(cb_obj.value));\\n&quot;},&quot;id&quot;:&quot;1982&quot;,&quot;type&quot;:&quot;CustomJS&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;2002&quot;,&quot;type&quot;:&quot;BasicTickFormatter&quot;},{&quot;attributes&quot;:{&quot;args&quot;:{&quot;max_value&quot;:&quot;Infinity&quot;,&quot;min_value&quot;:&quot;0&quot;,&quot;slider&quot;:{&quot;id&quot;:&quot;1975&quot;}},&quot;code&quot;:&quot;\\nslider.end = Math.min(max_value, Number(cb_obj.value));\\n&quot;},&quot;id&quot;:&quot;1983&quot;,&quot;type&quot;:&quot;CustomJS&quot;},{&quot;attributes&quot;:{&quot;axis_label&quot;:&quot;y&quot;,&quot;formatter&quot;:{&quot;id&quot;:&quot;1989&quot;},&quot;ticker&quot;:{&quot;id&quot;:&quot;1906&quot;}},&quot;id&quot;:&quot;1905&quot;,&quot;type&quot;:&quot;LinearAxis&quot;},{&quot;attributes&quot;:{&quot;axis&quot;:{&quot;id&quot;:&quot;1909&quot;},&quot;dimension&quot;:1,&quot;ticker&quot;:null},&quot;id&quot;:&quot;1912&quot;,&quot;type&quot;:&quot;Grid&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1906&quot;,&quot;type&quot;:&quot;BasicTicker&quot;},{&quot;attributes&quot;:{&quot;children&quot;:[{&quot;id&quot;:&quot;2010&quot;},{&quot;id&quot;:&quot;2012&quot;}]},&quot;id&quot;:&quot;2013&quot;,&quot;type&quot;:&quot;Row&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;2000&quot;,&quot;type&quot;:&quot;BasicTickFormatter&quot;},{&quot;attributes&quot;:{&quot;axis&quot;:{&quot;id&quot;:&quot;1905&quot;},&quot;ticker&quot;:null},&quot;id&quot;:&quot;1908&quot;,&quot;type&quot;:&quot;Grid&quot;},{&quot;attributes&quot;:{&quot;children&quot;:[[{&quot;id&quot;:&quot;1894&quot;},0,0],[{&quot;id&quot;:&quot;1987&quot;},0,1],[{&quot;id&quot;:&quot;1927&quot;},0,2]]},&quot;id&quot;:&quot;2010&quot;,&quot;type&quot;:&quot;GridBox&quot;},{&quot;attributes&quot;:{&quot;toolbars&quot;:[{&quot;id&quot;:&quot;1920&quot;},{&quot;id&quot;:&quot;1953&quot;}],&quot;tools&quot;:[{&quot;id&quot;:&quot;1913&quot;},{&quot;id&quot;:&quot;1914&quot;},{&quot;id&quot;:&quot;1915&quot;},{&quot;id&quot;:&quot;1916&quot;},{&quot;id&quot;:&quot;1917&quot;},{&quot;id&quot;:&quot;1918&quot;},{&quot;id&quot;:&quot;1946&quot;},{&quot;id&quot;:&quot;1947&quot;},{&quot;id&quot;:&quot;1948&quot;},{&quot;id&quot;:&quot;1949&quot;},{&quot;id&quot;:&quot;1950&quot;},{&quot;id&quot;:&quot;1951&quot;}]},&quot;id&quot;:&quot;2011&quot;,&quot;type&quot;:&quot;ProxyToolbar&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1910&quot;,&quot;type&quot;:&quot;BasicTicker&quot;},{&quot;attributes&quot;:{&quot;axis_label&quot;:&quot;PDF&quot;,&quot;formatter&quot;:{&quot;id&quot;:&quot;1991&quot;},&quot;ticker&quot;:{&quot;id&quot;:&quot;1910&quot;}},&quot;id&quot;:&quot;1909&quot;,&quot;type&quot;:&quot;LinearAxis&quot;},{&quot;attributes&quot;:{&quot;toolbar&quot;:{&quot;id&quot;:&quot;2011&quot;}},&quot;id&quot;:&quot;2012&quot;,&quot;type&quot;:&quot;ToolbarBox&quot;},{&quot;attributes&quot;:{&quot;end&quot;:1.05,&quot;start&quot;:-0.05},&quot;id&quot;:&quot;1960&quot;,&quot;type&quot;:&quot;Range1d&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1997&quot;,&quot;type&quot;:&quot;Selection&quot;},{&quot;attributes&quot;:{&quot;bottom_units&quot;:&quot;screen&quot;,&quot;fill_alpha&quot;:0.5,&quot;fill_color&quot;:&quot;lightgrey&quot;,&quot;left_units&quot;:&quot;screen&quot;,&quot;level&quot;:&quot;overlay&quot;,&quot;line_alpha&quot;:1.0,&quot;line_color&quot;:&quot;black&quot;,&quot;line_dash&quot;:[4,4],&quot;line_width&quot;:2,&quot;right_units&quot;:&quot;screen&quot;,&quot;top_units&quot;:&quot;screen&quot;},&quot;id&quot;:&quot;1952&quot;,&quot;type&quot;:&quot;BoxAnnotation&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;1996&quot;,&quot;type&quot;:&quot;UnionRenderers&quot;}],&quot;root_ids&quot;:[&quot;2015&quot;]},&quot;title&quot;:&quot;Bokeh Application&quot;,&quot;version&quot;:&quot;2.1.1&quot;}}';
                  var render_items = [{"docid":"6b3e6729-c690-4992-a63d-95c273745c15","root_ids":["2015"],"roots":{"2015":"beb804d4-099f-4da4-b532-af4dc91513a2"}}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    var attempts = 0;
                    var timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        clearInterval(timer);
                        embed_document(root);
                      } else {
                        attempts++;
                        if (attempts > 100) {
                          clearInterval(timer);
                          console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                        }
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
        function(Bokeh) {
        
        
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
        
      }
    
      if (root._bokeh_is_loading === 0) {
        console.debug("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(css_urls, js_urls, function() {
          console.debug("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();
(function() {
  var fn = function() {
    
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = false;
    
      if (typeof root._bokeh_onload_callbacks === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      
      
    
      var element = document.getElementById("48896e10-1dc2-4e38-a914-8da33175265b");
        if (element == null) {
          console.warn("Bokeh: autoload.js configured with elementid '48896e10-1dc2-4e38-a914-8da33175265b' but no matching script tag was found.")
        }
      
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) {
            if (callback != null)
              callback();
          });
        } finally {
          delete root._bokeh_onload_callbacks
        }
        console.debug("Bokeh: all callbacks have finished");
      }
    
      function load_libs(css_urls, js_urls, callback) {
        if (css_urls == null) css_urls = [];
        if (js_urls == null) js_urls = [];
    
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.debug("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.debug("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = css_urls.length + js_urls.length;
    
        function on_load() {
          root._bokeh_is_loading--;
          if (root._bokeh_is_loading === 0) {
            console.debug("Bokeh: all BokehJS libraries/stylesheets loaded");
            run_callbacks()
          }
        }
    
        function on_error() {
          console.error("failed to load " + url);
        }
    
        for (var i = 0; i < css_urls.length; i++) {
          var url = css_urls[i];
          const element = document.createElement("link");
          element.onload = on_load;
          element.onerror = on_error;
          element.rel = "stylesheet";
          element.type = "text/css";
          element.href = url;
          console.debug("Bokeh: injecting link tag for BokehJS stylesheet: ", url);
          document.body.appendChild(element);
        }
    
        const hashes = {"https://cdn.bokeh.org/bokeh/release/bokeh-2.1.1.min.js": "kLr4fYcqcSpbuI95brIH3vnnYCquzzSxHPU6XGQCIkQRGJwhg0StNbj1eegrHs12", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.1.1.min.js": "xIGPmVtaOm+z0BqfSOMn4lOR6ciex448GIKG4eE61LsAvmGj48XcMQZtKcE/UXZe", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.1.1.min.js": "Dc9u1wF/0zApGIWoBbH77iWEHtdmkuYWG839Uzmv8y8yBLXebjO9ZnERsde5Ln/P", "https://cdn.bokeh.org/bokeh/release/bokeh-gl-2.1.1.min.js": "cT9JaBz7GiRXdENrJLZNSC6eMNF3nh3fa5fTF51Svp+ukxPdwcU5kGXGPBgDCa2j"};
    
        for (var i = 0; i < js_urls.length; i++) {
          var url = js_urls[i];
          var element = document.createElement('script');
          element.onload = on_load;
          element.onerror = on_error;
          element.async = false;
          element.src = url;
          if (url in hashes) {
            element.crossOrigin = "anonymous";
            element.integrity = "sha384-" + hashes[url];
          }
          console.debug("Bokeh: injecting script tag for BokehJS library: ", url);
          document.head.appendChild(element);
        }
      };
    
      function inject_raw_css(css) {
        const element = document.createElement("style");
        element.appendChild(document.createTextNode(css));
        document.body.appendChild(element);
      }
    
      
      var js_urls = ["https://cdn.bokeh.org/bokeh/release/bokeh-2.1.1.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.1.1.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.1.1.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-gl-2.1.1.min.js"];
      var css_urls = [];
      
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          (function() {
            var fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                    
                  var docs_json = '{&quot;d272b517-ce2f-4f23-b491-8afa47c06ac3&quot;:{&quot;roots&quot;:{&quot;references&quot;:[{&quot;attributes&quot;:{&quot;text&quot;:&quot;Log-Normal&quot;},&quot;id&quot;:&quot;3337&quot;,&quot;type&quot;:&quot;Title&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3343&quot;,&quot;type&quot;:&quot;LinearScale&quot;},{&quot;attributes&quot;:{&quot;js_property_callbacks&quot;:{&quot;change:value&quot;:[{&quot;id&quot;:&quot;3423&quot;}]},&quot;value&quot;:&quot;0.5&quot;,&quot;width&quot;:70},&quot;id&quot;:&quot;3420&quot;,&quot;type&quot;:&quot;TextInput&quot;},{&quot;attributes&quot;:{&quot;below&quot;:[{&quot;id&quot;:&quot;3347&quot;}],&quot;center&quot;:[{&quot;id&quot;:&quot;3350&quot;},{&quot;id&quot;:&quot;3354&quot;}],&quot;frame_height&quot;:175,&quot;frame_width&quot;:300,&quot;left&quot;:[{&quot;id&quot;:&quot;3351&quot;}],&quot;renderers&quot;:[{&quot;id&quot;:&quot;3413&quot;}],&quot;title&quot;:{&quot;id&quot;:&quot;3337&quot;},&quot;toolbar&quot;:{&quot;id&quot;:&quot;3362&quot;},&quot;toolbar_location&quot;:null,&quot;x_range&quot;:{&quot;id&quot;:&quot;3339&quot;},&quot;x_scale&quot;:{&quot;id&quot;:&quot;3343&quot;},&quot;y_range&quot;:{&quot;id&quot;:&quot;3341&quot;},&quot;y_scale&quot;:{&quot;id&quot;:&quot;3345&quot;}},&quot;id&quot;:&quot;3336&quot;,&quot;subtype&quot;:&quot;Figure&quot;,&quot;type&quot;:&quot;Plot&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3439&quot;,&quot;type&quot;:&quot;Selection&quot;},{&quot;attributes&quot;:{&quot;bottom_units&quot;:&quot;screen&quot;,&quot;fill_alpha&quot;:0.5,&quot;fill_color&quot;:&quot;lightgrey&quot;,&quot;left_units&quot;:&quot;screen&quot;,&quot;level&quot;:&quot;overlay&quot;,&quot;line_alpha&quot;:1.0,&quot;line_color&quot;:&quot;black&quot;,&quot;line_dash&quot;:[4,4],&quot;line_width&quot;:2,&quot;right_units&quot;:&quot;screen&quot;,&quot;top_units&quot;:&quot;screen&quot;},&quot;id&quot;:&quot;3394&quot;,&quot;type&quot;:&quot;BoxAnnotation&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3392&quot;,&quot;type&quot;:&quot;ResetTool&quot;},{&quot;attributes&quot;:{&quot;args&quot;:{&quot;max_value&quot;:&quot;Infinity&quot;,&quot;min_value&quot;:&quot;-Infinity&quot;,&quot;slider&quot;:{&quot;id&quot;:&quot;3416&quot;}},&quot;code&quot;:&quot;\\nslider.end = Math.min(max_value, Number(cb_obj.value));\\n&quot;},&quot;id&quot;:&quot;3423&quot;,&quot;type&quot;:&quot;CustomJS&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3341&quot;,&quot;type&quot;:&quot;DataRange1d&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3438&quot;,&quot;type&quot;:&quot;UnionRenderers&quot;},{&quot;attributes&quot;:{&quot;text&quot;:&quot; &quot;},&quot;id&quot;:&quot;3370&quot;,&quot;type&quot;:&quot;Title&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3345&quot;,&quot;type&quot;:&quot;LinearScale&quot;},{&quot;attributes&quot;:{&quot;data&quot;:{&quot;x&quot;:{&quot;__ndarray__&quot;:&quot;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&quot;,&quot;dtype&quot;:&quot;float64&quot;,&quot;order&quot;:&quot;little&quot;,&quot;shape&quot;:[400]},&quot;y_p&quot;:{&quot;__ndarray__&quot;:&quot;AAAAAAAAAAA7gUMKikSIKMIcuyNkCSAvbSSqfQq0eDIiq++Kb+CgNH+F1WnAxyo2rCrlh/KlVzc0mB/zAkdHOGYbO6PTSAw5BNo+KMZlsTmUvELS1g0+OlpnqlbB3LY6Qo5kV6oGIjufvl69o56AO9U2QsTaotM7f5NSN/zqHzw/+IQEcN9iPEZ4wX/c+6A8qQFFSVUg2DzuHJ4w/t8LPR33sPtA2zo9dhBWSbAIZj0RNGTfmlaPPZ1TYWOAnLM9pq9vudLh1T2ZOhJeNQP2PcTry+31KBQ+E0UkZBn0MD7EDXnkJGFKPgtArWrmHGM+OAT3ReHxeT6Q2j9WH5WQPnTV1uP0DaQ+frJ7/NIKtz6jEUFjeD/JPr7NPTzeeNo+FM09DBqk6j6RHI1xX875Ppby+MQoHwg/Kwgj2MrOFT9ndFHzDxwjP2WMwHoMQzA/A/bGURLtOj/jzKaB67hFPyXKFZM5GlE/r7Key4tRWj9rxXE06NBjP469aCgiPG0/9Q0S4LgmdT+chdx3fwx+P9ZVm3r0+YQ/uMbjMoLOjD/PRJ3b5HiTPxpIEM6E75k/TWnyxnAHoT9e6ROT/Q+mP92xhjPtN6w/Gep4XoLTsT9TAM0IsUK2P6stVRM7fbs/dqYsYvrKwD9qliYpHU/EP6D52JKtUsg/iQiL1ATczD8n8CNC9ffQP5BRFHysyNM/98EQs6Xg1j+dVqDSSz/aP5M1B3/q4t0/21b6PVTk4D+kUuqiRPbiPzV8yue6JOU/b0XqC6Zs5z/2RtSHesrpPwVNPg5AOuw/xfTCq6G37j+isSzk/57wP2T/TsJB5PE/Aiu0dBkp8z9XKMWwAmv0P2mjtP17p/U/P1jjfBDc9j8d8eQjYQb4P7EjtTktJPk/uXf68Fkz+j/WOOoB+TH7P/vdKC9OHvw/4ByPqdP2/D+TQc1OPbr9P1RRSMZ6Z/4/Hg4Yhrj9/j+fxqfPX3z/P5xgF7gV4/8/iREJqtwYAEDuObWQMDQAQM3EOOWrQwBABjvlL4xHAEA43rsSJUAAQI/RmQfeLQBA9XZwAzARAEDPdCcWRtX/P+FTOYqXdf8/4yRkJpIE/z/nyY13g4P+PytmI1jE8/0/Vi1msbRW/T9u4HSEt638P66A/0Iv+vs/N5VHfXo9+z/nYfLo8Hj6P8k+ScLgrfk/GV3Sh4zd+D+DRrMOKQn4P709Du3bMfc/yPiCNrpY9j+sfSeGx371P7Lnq1D1pPQ/6pfneCLM8z+gdsMgG/XyPyLgTrCYIPI//fLGDEJP8T+6mW35q4HwP3G4dDizcO8/CAldQXrn7T/q9MjmcGjsP+SKlyI89Oo/jTnJy2OL6T8c1mhoVC7oP4U6Kw1h3eY/66TcQ8WY5T8yYILypmDkPz154D0YNeM/6PLTYhkW4j9rLKiCmgPhP1NEcb76+t8/Tc6bCC4H3j+4OWq4YivcP8gaKFwZZ9o/A9LiCcK52D8ik6H9viLXPyDtOgdnodU/7hPcxwc11D/Fed2/59zSP6sf8i1ImNE/FxIdwWZm0D/G7kg+/ozOP/9C6oKYb8w/EtQsVRNzyj/fx9vs6JXIP01pTY+Y1sY/hlw1KagzxT8J5TmspavDP5eWADUoPcI/il9P/tDmwD+z3npLmE6/P2cMjIyi+rw/bP2+2UfPuj8a5AjWJ8q4P0UkyhX76LY/6t95UZMptT8SzBxp24mzPyxUkz7XB7I/MrZVbKOhsD86VoO76aquP/jCWpswQ6w/m6APX+MIqj/dsM4N9/inP6Z0C2KMEKY/i8+XRu5MpD+Pu3JDkKuiP40kQ98MKqE/AHa680eMnz9AO0pHcvucP3rJQuqjnZo/Ugs10yhvmD+mmHF+imyWP1ShYr2MkpQ/AKx0mCrekj+yw2BGk0yRP/cFOnZOto8/sXF0oOoOjT9YGAsQcJ6KP+bqxNilYIg/8hn2E6BRhj9/CTMQu22EP0tmebqWsYI/KM2DQBIagT96vjvXj0h/P9NS/mUSm3w/qqviCLYmej84oKCD5OZ3P1zij+Ng13U/9XciREH0cz+MCLDy6DlyP5j/v+0CpXA/Wh7Td/lkbj9AY6ksA79rPy6nycXrUmk/n8w29OUbZz83+5lphhVlP3pQq3u8O2M/c8wfSMuKYT9PYbCjhv5fP+fejiD5K10/7IaN1CGYWj+1wKArrj1YP865vay7F1Y/fBjsJ88hVD9pdEKKzFdSPyTt80zvtVA/dP5E6oZxTj8t12k1PrpLP4m+7tk4QEk/ZtKlWCj+Rj9iZdEhMe9EP77xtCzhDkM/v1IDSydZQT9FOSZVlpQ/PzkGPPHLvTw/2WlENbcnOj+/zIjjqMw3P6zunTxvpzU/l7k8c0uzMz9Vwen65+sxP0JWoKBPTTA/dXLIu8qnLT8eZ3KvufgqP1eBFfhmhyg/WoUQYlROJj+TTskVf0gkP6dIh/pUcSI/tgvX/KrEID/Wp0ZMaH0eP1W2J+nytxs/3Mkcx6QyGT/i19UsvOcWPxBsFTD60RQ/59QYRpfsEj8MtpzOODMRP6v6VAnPQw8/gBAHhA1qDD/ACg8HmdIJPxG/vTx0dwc/5HsDLitTBT9ViNQYx2ADP6gFvlXDmwE/+EOVNQMAAD+bLyWEkRP9Pgb90ptYa/o+5lMahSkB+D7Z9pk2Yc/1Prv1pP3e0PM+C2yY0vgA8j40pXG1cFvwPgnCVffVuO0+tXKw9MoA6z4x/JDyXojoPm/aJLvESeY+Dujw9rU/5D5Wt90BZ2XiPhX5qNZ7tuA+4opc8Ptd3j7gozOEppbbPkrPExlrENk+bBvYH1bF1j5HhQjw/q/UPqTkFC17y9I+nB9PTlMT0T6uAmxf8AbPPjCI0ydzMMw+cINxA3ucyT6zFDTT8ETHPvhwUQJMJMU+7ZOSiIU1wz6hqCoaDHTBPptk8tNyt78+iUn+ypDRvD65JgaomC+6PlAmxohRy7c+uDPQbRSftT6K9jTkvqWzPr1aOuam2rE+4BHy1o85sD43+xT+QH2tPgr2BeezzKo+kxENoh5bqD4stDNxvCKmPkOQEPhPHqQ+czMj1BZJoj5md5lXvp6gPjIdEpiyNp4+kdsZSq12mz6/lckZ8vaYPmBQYm6esZY+5sZpz1mhlD71I1Q5ScGSPhKlbZsDDZE+bhSsxw4Bjz4XrrIBYjCMPjVYY4JkoYk+Bj2U/RROhz70Eu4C/zCFPmtekxEuRYM+1ARe2yGGgT70kb43h99/Pm8fs9O4/Hw+2ZV22Bhdej6a9ni7hfp3PmyWUphtz3U+yHBBBMHWcz4yU0QX5wtyPn+uZ46yanA+f7Hl2q/ebT4NQwURySxrPrNgicBsuWg+l+j2eul+Zj5gtXH0EnhkPojLtdE1oGI+qYuYlAzzYD5gBn8Za9lePqe6SmlTE1w+WjFvymiNWT7QZ6yY10FXPn+DnChUK1U+p+0aWA5FUz5Gj5ZCpopRPgsV/vxD8E8+aYTnlsgTTT7G2zA2SHlKPtya9sDJGkg+Sw2jJ9/yRT7nkvazmPxDPvLjjYF5M0I+YVWYBG2TQD76TuULezE+PkumRPwWgDs+fCF+dYsMOT71w3J3RNE2PoBgQ28vyTQ+P2lAb6/vMj4r/Wt6kkAxPiHSmZQPcC8+81pG8C2lLD6Hr1PpLxoqPl1F93ZXySc+1NzYYWutJT5ur3o1q8EjPoCZ/0rEASI+y8OR08dpID74tRGWQ+wdPr/AJ3shRxs+qzY6mjzeGD4z08bJMKwWPoF8vhYWrBQ+3OP9h3XZEj60FDLnPjARPoT/m+5+WQ8+N4PKBTOXDD7PiHhdeRMKPhIiVv29yAc+zx8m+eyxBT6H1UjlZsoDPqqnElf2DQI+AZqOWMZ4AD6Rig5zsw7+PVfwbFMGbfs9hW+kE7wG+T2kSbLFj9b2PWTpCOm01/Q9kaNMmswF8z3bmfe821zxPdRKchCEsu89H+LrxGPv7D0A0FzxUWrqPcIliwHTHeg90z9eLugE5j3vU+dTBBvkPWiZg8gBXOI9TDLYHRnE4D0sowltsZ/ePUX3qjo6+Ns9dtH0GBSM2T3p1MUpCFbXPVhBkq5VUdU9hCCXg6d50z0T40SMCsvRPRUYJ/vkQdA9ThINw9y1zT0fl5npUCbLPYcQofKwz8g9giNYhwKtxj1SsC+Gu7nEPbEa9hC48cI9y0ECfjFRwT2KMxUwbKm/PcMfQjRD8rw9p+rvrSx3uj3nFjL47TK4Pe/bMsbBILY9bGwtyE08tD0=&quot;,&quot;dtype&quot;:&quot;float64&quot;,&quot;order&quot;:&quot;little&quot;,&quot;shape&quot;:[400]}},&quot;selected&quot;:{&quot;id&quot;:&quot;3436&quot;},&quot;selection_policy&quot;:{&quot;id&quot;:&quot;3435&quot;}},&quot;id&quot;:&quot;3403&quot;,&quot;type&quot;:&quot;ColumnDataSource&quot;},{&quot;attributes&quot;:{&quot;height&quot;:10},&quot;id&quot;:&quot;3456&quot;,&quot;type&quot;:&quot;Spacer&quot;},{&quot;attributes&quot;:{&quot;js_property_callbacks&quot;:{&quot;change:value&quot;:[{&quot;id&quot;:&quot;3422&quot;}]},&quot;value&quot;:&quot;-0.5&quot;,&quot;width&quot;:70},&quot;id&quot;:&quot;3418&quot;,&quot;type&quot;:&quot;TextInput&quot;},{&quot;attributes&quot;:{&quot;children&quot;:[{&quot;id&quot;:&quot;3428&quot;},{&quot;id&quot;:&quot;3456&quot;},{&quot;id&quot;:&quot;3455&quot;}]},&quot;id&quot;:&quot;3457&quot;,&quot;type&quot;:&quot;Column&quot;},{&quot;attributes&quot;:{&quot;bottom_units&quot;:&quot;screen&quot;,&quot;fill_alpha&quot;:0.5,&quot;fill_color&quot;:&quot;lightgrey&quot;,&quot;left_units&quot;:&quot;screen&quot;,&quot;level&quot;:&quot;overlay&quot;,&quot;line_alpha&quot;:1.0,&quot;line_color&quot;:&quot;black&quot;,&quot;line_dash&quot;:[4,4],&quot;line_width&quot;:2,&quot;right_units&quot;:&quot;screen&quot;,&quot;top_units&quot;:&quot;screen&quot;},&quot;id&quot;:&quot;3361&quot;,&quot;type&quot;:&quot;BoxAnnotation&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3442&quot;,&quot;type&quot;:&quot;BasicTickFormatter&quot;},{&quot;attributes&quot;:{&quot;axis_label&quot;:&quot;y&quot;,&quot;formatter&quot;:{&quot;id&quot;:&quot;3431&quot;},&quot;ticker&quot;:{&quot;id&quot;:&quot;3348&quot;}},&quot;id&quot;:&quot;3347&quot;,&quot;type&quot;:&quot;LinearAxis&quot;},{&quot;attributes&quot;:{&quot;axis&quot;:{&quot;id&quot;:&quot;3351&quot;},&quot;dimension&quot;:1,&quot;ticker&quot;:null},&quot;id&quot;:&quot;3354&quot;,&quot;type&quot;:&quot;Grid&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3348&quot;,&quot;type&quot;:&quot;BasicTicker&quot;},{&quot;attributes&quot;:{&quot;end&quot;:0.5,&quot;format&quot;:&quot;0[.]00&quot;,&quot;js_property_callbacks&quot;:{&quot;change:value&quot;:[{&quot;id&quot;:&quot;3415&quot;}]},&quot;start&quot;:-0.5,&quot;step&quot;:0.01,&quot;title&quot;:&quot;\\u00b5&quot;,&quot;value&quot;:0.0},&quot;id&quot;:&quot;3416&quot;,&quot;type&quot;:&quot;Slider&quot;},{&quot;attributes&quot;:{&quot;axis&quot;:{&quot;id&quot;:&quot;3347&quot;},&quot;ticker&quot;:null},&quot;id&quot;:&quot;3350&quot;,&quot;type&quot;:&quot;Grid&quot;},{&quot;attributes&quot;:{&quot;children&quot;:[{&quot;id&quot;:&quot;3418&quot;},{&quot;id&quot;:&quot;3416&quot;},{&quot;id&quot;:&quot;3420&quot;}]},&quot;id&quot;:&quot;3426&quot;,&quot;type&quot;:&quot;Row&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3352&quot;,&quot;type&quot;:&quot;BasicTicker&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3381&quot;,&quot;type&quot;:&quot;BasicTicker&quot;},{&quot;attributes&quot;:{&quot;axis_label&quot;:&quot;PDF&quot;,&quot;formatter&quot;:{&quot;id&quot;:&quot;3433&quot;},&quot;ticker&quot;:{&quot;id&quot;:&quot;3352&quot;}},&quot;id&quot;:&quot;3351&quot;,&quot;type&quot;:&quot;LinearAxis&quot;},{&quot;attributes&quot;:{&quot;active_drag&quot;:&quot;auto&quot;,&quot;active_inspect&quot;:&quot;auto&quot;,&quot;active_multi&quot;:null,&quot;active_scroll&quot;:&quot;auto&quot;,&quot;active_tap&quot;:&quot;auto&quot;,&quot;tools&quot;:[{&quot;id&quot;:&quot;3388&quot;},{&quot;id&quot;:&quot;3389&quot;},{&quot;id&quot;:&quot;3390&quot;},{&quot;id&quot;:&quot;3391&quot;},{&quot;id&quot;:&quot;3392&quot;},{&quot;id&quot;:&quot;3393&quot;}]},&quot;id&quot;:&quot;3395&quot;,&quot;type&quot;:&quot;Toolbar&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3436&quot;,&quot;type&quot;:&quot;Selection&quot;},{&quot;attributes&quot;:{&quot;children&quot;:[{&quot;id&quot;:&quot;3419&quot;},{&quot;id&quot;:&quot;3417&quot;},{&quot;id&quot;:&quot;3421&quot;}]},&quot;id&quot;:&quot;3427&quot;,&quot;type&quot;:&quot;Row&quot;},{&quot;attributes&quot;:{&quot;line_color&quot;:&quot;#1f77b4&quot;,&quot;line_width&quot;:2,&quot;x&quot;:{&quot;field&quot;:&quot;x&quot;},&quot;y&quot;:{&quot;field&quot;:&quot;y_p&quot;}},&quot;id&quot;:&quot;3411&quot;,&quot;type&quot;:&quot;Line&quot;},{&quot;attributes&quot;:{&quot;args&quot;:{&quot;max_value&quot;:&quot;Infinity&quot;,&quot;min_value&quot;:&quot;-Infinity&quot;,&quot;slider&quot;:{&quot;id&quot;:&quot;3416&quot;}},&quot;code&quot;:&quot;\\n    slider.start = Math.max(min_value, Number(cb_obj.value));\\n&quot;},&quot;id&quot;:&quot;3422&quot;,&quot;type&quot;:&quot;CustomJS&quot;},{&quot;attributes&quot;:{&quot;data_source&quot;:{&quot;id&quot;:&quot;3404&quot;},&quot;glyph&quot;:{&quot;id&quot;:&quot;3406&quot;},&quot;hover_glyph&quot;:null,&quot;muted_glyph&quot;:null,&quot;nonselection_glyph&quot;:{&quot;id&quot;:&quot;3407&quot;},&quot;selection_glyph&quot;:null,&quot;view&quot;:{&quot;id&quot;:&quot;3409&quot;}},&quot;id&quot;:&quot;3408&quot;,&quot;type&quot;:&quot;GlyphRenderer&quot;},{&quot;attributes&quot;:{&quot;axis_label&quot;:&quot;y&quot;,&quot;formatter&quot;:{&quot;id&quot;:&quot;3442&quot;},&quot;ticker&quot;:{&quot;id&quot;:&quot;3381&quot;}},&quot;id&quot;:&quot;3380&quot;,&quot;type&quot;:&quot;LinearAxis&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3355&quot;,&quot;type&quot;:&quot;PanTool&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3431&quot;,&quot;type&quot;:&quot;BasicTickFormatter&quot;},{&quot;attributes&quot;:{&quot;source&quot;:{&quot;id&quot;:&quot;3404&quot;}},&quot;id&quot;:&quot;3409&quot;,&quot;type&quot;:&quot;CDSView&quot;},{&quot;attributes&quot;:{&quot;axis&quot;:{&quot;id&quot;:&quot;3384&quot;},&quot;dimension&quot;:1,&quot;ticker&quot;:null},&quot;id&quot;:&quot;3387&quot;,&quot;type&quot;:&quot;Grid&quot;},{&quot;attributes&quot;:{&quot;width&quot;:30},&quot;id&quot;:&quot;3429&quot;,&quot;type&quot;:&quot;Spacer&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3356&quot;,&quot;type&quot;:&quot;WheelZoomTool&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3444&quot;,&quot;type&quot;:&quot;BasicTickFormatter&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3385&quot;,&quot;type&quot;:&quot;BasicTicker&quot;},{&quot;attributes&quot;:{&quot;children&quot;:[{&quot;id&quot;:&quot;3452&quot;},{&quot;id&quot;:&quot;3454&quot;}]},&quot;id&quot;:&quot;3455&quot;,&quot;type&quot;:&quot;Row&quot;},{&quot;attributes&quot;:{&quot;overlay&quot;:{&quot;id&quot;:&quot;3361&quot;}},&quot;id&quot;:&quot;3357&quot;,&quot;type&quot;:&quot;BoxZoomTool&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3435&quot;,&quot;type&quot;:&quot;UnionRenderers&quot;},{&quot;attributes&quot;:{&quot;children&quot;:[{&quot;id&quot;:&quot;3426&quot;},{&quot;id&quot;:&quot;3427&quot;}]},&quot;id&quot;:&quot;3428&quot;,&quot;type&quot;:&quot;Column&quot;},{&quot;attributes&quot;:{&quot;axis_label&quot;:&quot;CDF&quot;,&quot;formatter&quot;:{&quot;id&quot;:&quot;3444&quot;},&quot;ticker&quot;:{&quot;id&quot;:&quot;3385&quot;}},&quot;id&quot;:&quot;3384&quot;,&quot;type&quot;:&quot;LinearAxis&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3393&quot;,&quot;type&quot;:&quot;HelpTool&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3378&quot;,&quot;type&quot;:&quot;LinearScale&quot;},{&quot;attributes&quot;:{&quot;line_alpha&quot;:0.1,&quot;line_color&quot;:&quot;#1f77b4&quot;,&quot;line_width&quot;:2,&quot;x&quot;:{&quot;field&quot;:&quot;x&quot;},&quot;y&quot;:{&quot;field&quot;:&quot;y_p&quot;}},&quot;id&quot;:&quot;3412&quot;,&quot;type&quot;:&quot;Line&quot;},{&quot;attributes&quot;:{&quot;toolbars&quot;:[{&quot;id&quot;:&quot;3362&quot;},{&quot;id&quot;:&quot;3395&quot;}],&quot;tools&quot;:[{&quot;id&quot;:&quot;3355&quot;},{&quot;id&quot;:&quot;3356&quot;},{&quot;id&quot;:&quot;3357&quot;},{&quot;id&quot;:&quot;3358&quot;},{&quot;id&quot;:&quot;3359&quot;},{&quot;id&quot;:&quot;3360&quot;},{&quot;id&quot;:&quot;3388&quot;},{&quot;id&quot;:&quot;3389&quot;},{&quot;id&quot;:&quot;3390&quot;},{&quot;id&quot;:&quot;3391&quot;},{&quot;id&quot;:&quot;3392&quot;},{&quot;id&quot;:&quot;3393&quot;}]},&quot;id&quot;:&quot;3453&quot;,&quot;type&quot;:&quot;ProxyToolbar&quot;},{&quot;attributes&quot;:{&quot;data&quot;:{&quot;x&quot;:{&quot;__ndarray__&quot;:&quot;AAAAAAAAAACASAEiBYiEP4BIASIFiJQ/wOwBswfMnj+ASAEiBYikP6CagWoGqqk/wOwBswfMrj9wH8F9BPexP4BIASIFiLQ/kHFBxgUZtz+gmoFqBqq5P7DDwQ4HO7w/wOwBswfMvj/oCqErhK7AP3AfwX0E98E/+DPhz4Q/wz+ASAEiBYjEPwhdIXSF0MU/kHFBxgUZxz8YhmEYhmHIP6CagWoGqsk/KK+hvIbyyj+ww8EOBzvMPzjY4WCHg80/wOwBswfMzj+kAJECRArQP+gKoSuErtA/LBWxVMRS0T9wH8F9BPfRP7Qp0aZEm9I/+DPhz4Q/0z88PvH4xOPTP4BIASIFiNQ/xFIRS0Us1T8IXSF0hdDVP0xnMZ3FdNY/kHFBxgUZ1z/Ue1HvRb3XPxiGYRiGYdg/XJBxQcYF2T+gmoFqBqrZP+SkkZNGTto/KK+hvIby2j9subHlxpbbP7DDwQ4HO9w/9M3RN0ff3D842OFgh4PdP3zi8YnHJ94/wOwBswfM3j8E9xHcR3DfP6QAkQJECuA/xgUZF2Rc4D/oCqErhK7gPwoQKUCkAOE/LBWxVMRS4T9OGjlp5KThP3AfwX0E9+E/kiRJkiRJ4j+0KdGmRJviP9YuWbtk7eI/+DPhz4Q/4z8aOWnkpJHjPzw+8fjE4+M/XkN5DeU15D+ASAEiBYjkP6JNiTYl2uQ/xFIRS0Us5T/mV5lfZX7lPwhdIXSF0OU/KmKpiKUi5j9MZzGdxXTmP25subHlxuY/kHFBxgUZ5z+ydsnaJWvnP9R7Ue9Fvec/9oDZA2YP6D8YhmEYhmHoPzqL6Syms+g/XJBxQcYF6T9+lflV5lfpP6CagWoGquk/wp8Jfyb86T/kpJGTRk7qPwaqGahmoOo/KK+hvIby6j9KtCnRpkTrP2y5seXGlus/jr45+ubo6z+ww8EOBzvsP9LISSMnjew/9M3RN0ff7D8W01lMZzHtPzjY4WCHg+0/Wt1pdafV7T984vGJxyfuP57neZ7nee4/wOwBswfM7j/i8YnHJx7vPwT3EdxHcO8/JvyZ8GfC7z+kAJECRArwPzUD1QxUM/A/xgUZF2Rc8D9XCF0hdIXwP+gKoSuErvA/eQ3lNZTX8D8KEClApADxP5sSbUq0KfE/LBWxVMRS8T+9F/Ve1HvxP04aOWnkpPE/3xx9c/TN8T9wH8F9BPfxPwEiBYgUIPI/kiRJkiRJ8j8jJ42cNHLyP7Qp0aZEm/I/RSwVsVTE8j/WLlm7ZO3yP2cxncV0FvM/+DPhz4Q/8z+JNiXalGjzPxo5aeSkkfM/qzut7rS68z88PvH4xOPzP81ANQPVDPQ/XkN5DeU19D/vRb0X9V70P4BIASIFiPQ/EUtFLBWx9D+iTYk2Jdr0PzNQzUA1A/U/xFIRS0Us9T9VVVVVVVX1P+ZXmV9lfvU/d1rdaXWn9T8IXSF0hdD1P5lfZX6V+fU/KmKpiKUi9j+7ZO2StUv2P0xnMZ3FdPY/3Wl1p9Wd9j9ubLmx5cb2P/9u/bv17/Y/kHFBxgUZ9z8hdIXQFUL3P7J2ydola/c/Q3kN5TWU9z/Ue1HvRb33P2V+lflV5vc/9oDZA2YP+D+Hgx0Odjj4PxiGYRiGYfg/qYilIpaK+D86i+ksprP4P8uNLTe23Pg/XJBxQcYF+T/tkrVL1i75P36V+VXmV/k/D5g9YPaA+T+gmoFqBqr5PzGdxXQW0/k/wp8Jfyb8+T9Tok2JNiX6P+SkkZNGTvo/dafVnVZ3+j8GqhmoZqD6P5esXbJ2yfo/KK+hvIby+j+5seXGlhv7P0q0KdGmRPs/27Zt27Zt+z9subHlxpb7P/279e/Wv/s/jr45+ubo+z8fwX0E9xH8P7DDwQ4HO/w/QcYFGRdk/D/SyEkjJ438P2PLjS03tvw/9M3RN0ff/D+F0BVCVwj9PxbTWUxnMf0/p9WdVnda/T842OFgh4P9P8naJWuXrP0/Wt1pdafV/T/r361/t/79P3zi8YnHJ/4/DeU1lNdQ/j+e53me53n+Py/qvaj3ov4/wOwBswfM/j9R70W9F/X+P+LxiccnHv8/c/TN0TdH/z8E9xHcR3D/P5X5VeZXmf8/JvyZ8GfC/z+3/t36d+v/P6QAkQJECgBA7AGzB8weAEA1A9UMVDMAQH4E9xHcRwBAxgUZF2RcAEAOBzsc7HAAQFcIXSF0hQBAoAl/JvyZAEDoCqErhK4AQDAMwzAMwwBAeQ3lNZTXAEDCDgc7HOwAQAoQKUCkAAFAUhFLRSwVAUCbEm1KtCkBQOQTj088PgFALBWxVMRSAUB0FtNZTGcBQL0X9V7UewFABhkXZFyQAUBOGjlp5KQBQJYbW25suQFA3xx9c/TNAUAoHp94fOIBQHAfwX0E9wFAuCDjgowLAkABIgWIFCACQEojJ42cNAJAkiRJkiRJAkDaJWuXrF0CQCMnjZw0cgJAbCivobyGAkC0KdGmRJsCQPwq86vMrwJARSwVsVTEAkCOLTe23NgCQNYuWbtk7QJAHjB7wOwBA0BnMZ3FdBYDQLAyv8r8KgNA+DPhz4Q/A0BANQPVDFQDQIk2JdqUaANA0jdH3xx9A0AaOWnkpJEDQGI6i+kspgNAqzut7rS6A0D0PM/zPM8DQDw+8fjE4wNAhD8T/kz4A0DNQDUD1QwEQBZCVwhdIQRAXkN5DeU1BECmRJsSbUoEQO9FvRf1XgRAOEffHH1zBECASAEiBYgEQMhJIyeNnARAEUtFLBWxBEBaTGcxncUEQKJNiTYl2gRA6k6rO63uBEAzUM1ANQMFQHxR70W9FwVAxFIRS0UsBUAMVDNQzUAFQFVVVVVVVQVAnlZ3Wt1pBUDmV5lfZX4FQC5Zu2TtkgVAd1rdaXWnBUDAW/9u/bsFQAhdIXSF0AVAUF5DeQ3lBUCZX2V+lfkFQOJgh4MdDgZAKmKpiKUiBkByY8uNLTcGQLtk7ZK1SwZABGYPmD1gBkBMZzGdxXQGQJRoU6JNiQZA3Wl1p9WdBkAma5esXbIGQG5subHlxgZAtm3btm3bBkD/bv279e8GQEhwH8F9BAdAkHFBxgUZB0DYcmPLjS0HQCF0hdAVQgdAanWn1Z1WB0CydsnaJWsHQPp369+tfwdAQ3kN5TWUB0CMei/qvagHQNR7Ue9FvQdAHH1z9M3RB0BlfpX5VeYHQK5/t/7d+gdA9oDZA2YPCEA+gvsI7iMIQIeDHQ52OAhA0IQ/E/5MCEAYhmEYhmEIQGCHgx0OdghAqYilIpaKCEDyiccnHp8IQDqL6SymswhAgowLMi7ICEDLjS03ttwIQBSPTzw+8QhAXJBxQcYFCUCkkZNGThoJQO2StUvWLglANpTXUF5DCUB+lflV5lcJQMaWG1tubAlAD5g9YPaACUBYmV9lfpUJQKCagWoGqglA6Jujb46+CUAxncV0FtMJQHqe53me5wlAwp8Jfyb8CUAKoSuErhAKQFOiTYk2JQpAnKNvjr45CkDkpJGTRk4KQCyms5jOYgpAdafVnVZ3CkC+qPei3osKQAaqGahmoApATqs7re60CkCXrF2ydskKQOCtf7f+3QpAKK+hvIbyCkBwsMPBDgcLQLmx5caWGwtAArMHzB4wC0BKtCnRpkQLQJK1S9YuWQtA27Zt27ZtC0AkuI/gPoILQGy5seXGlgtAtLrT6k6rC0D9u/Xv1r8LQEa9F/Ve1AtAjr45+uboC0DWv1v/bv0LQB/BfQT3EQxAaMKfCX8mDECww8EOBzsMQPjE4xOPTwxAQcYFGRdkDECKxycen3gMQNLISSMnjQxAGsprKK+hDEBjy40tN7YMQKzMrzK/ygxA9M3RN0ffDEA8z/M8z/MMQIXQFUJXCA1AztE3R98cDUAW01lMZzENQF7Ue1HvRQ1Ap9WdVndaDUDw1r9b/24NQDjY4WCHgw1AgNkDZg+YDUDJ2iVrl6wNQBLcR3AfwQ1AWt1pdafVDUCi3ot6L+oNQOvfrX+3/g1ANOHPhD8TDkB84vGJxycOQMTjE49PPA5ADeU1lNdQDkBW5leZX2UOQJ7neZ7neQ5A5uibo2+ODkAv6r2o96IOQHjr361/tw5AwOwBswfMDkAI7iO4j+AOQFHvRb0X9Q5AmvBnwp8JD0Di8YnHJx4PQCrzq8yvMg9Ac/TN0TdHD0C89e/Wv1sPQAT3EdxHcA9ATPgz4c+ED0CV+VXmV5kPQN76d+vfrQ9AJvyZ8GfCD0Bu/bv179YPQLf+3fp36w9AAAAAAAAAEEA=&quot;,&quot;dtype&quot;:&quot;float64&quot;,&quot;order&quot;:&quot;little&quot;,&quot;shape&quot;:[400]},&quot;y_c&quot;:{&quot;__ndarray__&quot;:&quot;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&quot;,&quot;dtype&quot;:&quot;float64&quot;,&quot;order&quot;:&quot;little&quot;,&quot;shape&quot;:[400]}},&quot;selected&quot;:{&quot;id&quot;:&quot;3439&quot;},&quot;selection_policy&quot;:{&quot;id&quot;:&quot;3438&quot;}},&quot;id&quot;:&quot;3404&quot;,&quot;type&quot;:&quot;ColumnDataSource&quot;},{&quot;attributes&quot;:{&quot;overlay&quot;:{&quot;id&quot;:&quot;3394&quot;}},&quot;id&quot;:&quot;3390&quot;,&quot;type&quot;:&quot;BoxZoomTool&quot;},{&quot;attributes&quot;:{&quot;data_source&quot;:{&quot;id&quot;:&quot;3403&quot;},&quot;glyph&quot;:{&quot;id&quot;:&quot;3411&quot;},&quot;hover_glyph&quot;:null,&quot;muted_glyph&quot;:null,&quot;nonselection_glyph&quot;:{&quot;id&quot;:&quot;3412&quot;},&quot;selection_glyph&quot;:null,&quot;view&quot;:{&quot;id&quot;:&quot;3414&quot;}},&quot;id&quot;:&quot;3413&quot;,&quot;type&quot;:&quot;GlyphRenderer&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3389&quot;,&quot;type&quot;:&quot;WheelZoomTool&quot;},{&quot;attributes&quot;:{&quot;active_drag&quot;:&quot;auto&quot;,&quot;active_inspect&quot;:&quot;auto&quot;,&quot;active_multi&quot;:null,&quot;active_scroll&quot;:&quot;auto&quot;,&quot;active_tap&quot;:&quot;auto&quot;,&quot;tools&quot;:[{&quot;id&quot;:&quot;3355&quot;},{&quot;id&quot;:&quot;3356&quot;},{&quot;id&quot;:&quot;3357&quot;},{&quot;id&quot;:&quot;3358&quot;},{&quot;id&quot;:&quot;3359&quot;},{&quot;id&quot;:&quot;3360&quot;}]},&quot;id&quot;:&quot;3362&quot;,&quot;type&quot;:&quot;Toolbar&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3376&quot;,&quot;type&quot;:&quot;LinearScale&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3388&quot;,&quot;type&quot;:&quot;PanTool&quot;},{&quot;attributes&quot;:{&quot;end&quot;:1.05,&quot;start&quot;:-0.05},&quot;id&quot;:&quot;3402&quot;,&quot;type&quot;:&quot;Range1d&quot;},{&quot;attributes&quot;:{&quot;line_alpha&quot;:0.1,&quot;line_color&quot;:&quot;#1f77b4&quot;,&quot;line_width&quot;:2,&quot;x&quot;:{&quot;field&quot;:&quot;x&quot;},&quot;y&quot;:{&quot;field&quot;:&quot;y_c&quot;}},&quot;id&quot;:&quot;3407&quot;,&quot;type&quot;:&quot;Line&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3360&quot;,&quot;type&quot;:&quot;HelpTool&quot;},{&quot;attributes&quot;:{&quot;below&quot;:[{&quot;id&quot;:&quot;3380&quot;}],&quot;center&quot;:[{&quot;id&quot;:&quot;3383&quot;},{&quot;id&quot;:&quot;3387&quot;}],&quot;frame_height&quot;:175,&quot;frame_width&quot;:300,&quot;left&quot;:[{&quot;id&quot;:&quot;3384&quot;}],&quot;renderers&quot;:[{&quot;id&quot;:&quot;3408&quot;}],&quot;title&quot;:{&quot;id&quot;:&quot;3370&quot;},&quot;toolbar&quot;:{&quot;id&quot;:&quot;3395&quot;},&quot;toolbar_location&quot;:null,&quot;x_range&quot;:{&quot;id&quot;:&quot;3339&quot;},&quot;x_scale&quot;:{&quot;id&quot;:&quot;3376&quot;},&quot;y_range&quot;:{&quot;id&quot;:&quot;3402&quot;},&quot;y_scale&quot;:{&quot;id&quot;:&quot;3378&quot;}},&quot;id&quot;:&quot;3369&quot;,&quot;subtype&quot;:&quot;Figure&quot;,&quot;type&quot;:&quot;Plot&quot;},{&quot;attributes&quot;:{&quot;axis&quot;:{&quot;id&quot;:&quot;3380&quot;},&quot;ticker&quot;:null},&quot;id&quot;:&quot;3383&quot;,&quot;type&quot;:&quot;Grid&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3359&quot;,&quot;type&quot;:&quot;ResetTool&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3433&quot;,&quot;type&quot;:&quot;BasicTickFormatter&quot;},{&quot;attributes&quot;:{&quot;line_color&quot;:&quot;#1f77b4&quot;,&quot;line_width&quot;:2,&quot;x&quot;:{&quot;field&quot;:&quot;x&quot;},&quot;y&quot;:{&quot;field&quot;:&quot;y_c&quot;}},&quot;id&quot;:&quot;3406&quot;,&quot;type&quot;:&quot;Line&quot;},{&quot;attributes&quot;:{&quot;source&quot;:{&quot;id&quot;:&quot;3403&quot;}},&quot;id&quot;:&quot;3414&quot;,&quot;type&quot;:&quot;CDSView&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3358&quot;,&quot;type&quot;:&quot;SaveTool&quot;},{&quot;attributes&quot;:{&quot;args&quot;:{&quot;max_value&quot;:&quot;Infinity&quot;,&quot;min_value&quot;:&quot;0&quot;,&quot;slider&quot;:{&quot;id&quot;:&quot;3417&quot;}},&quot;code&quot;:&quot;\\nslider.end = Math.min(max_value, Number(cb_obj.value));\\n&quot;},&quot;id&quot;:&quot;3425&quot;,&quot;type&quot;:&quot;CustomJS&quot;},{&quot;attributes&quot;:{&quot;js_property_callbacks&quot;:{&quot;change:end&quot;:[{&quot;id&quot;:&quot;3415&quot;}],&quot;change:start&quot;:[{&quot;id&quot;:&quot;3415&quot;}]},&quot;range_padding&quot;:0},&quot;id&quot;:&quot;3339&quot;,&quot;type&quot;:&quot;DataRange1d&quot;},{&quot;attributes&quot;:{&quot;end&quot;:1.0,&quot;format&quot;:&quot;0[.]00&quot;,&quot;js_property_callbacks&quot;:{&quot;change:value&quot;:[{&quot;id&quot;:&quot;3415&quot;}]},&quot;start&quot;:0.1,&quot;step&quot;:0.01,&quot;title&quot;:&quot;\\u03c3&quot;,&quot;value&quot;:0.2},&quot;id&quot;:&quot;3417&quot;,&quot;type&quot;:&quot;Slider&quot;},{&quot;attributes&quot;:{&quot;args&quot;:{&quot;max_value&quot;:&quot;Infinity&quot;,&quot;min_value&quot;:&quot;0&quot;,&quot;slider&quot;:{&quot;id&quot;:&quot;3417&quot;}},&quot;code&quot;:&quot;\\n    slider.start = Math.max(min_value, Number(cb_obj.value));\\n&quot;},&quot;id&quot;:&quot;3424&quot;,&quot;type&quot;:&quot;CustomJS&quot;},{&quot;attributes&quot;:{&quot;args&quot;:{&quot;arg1&quot;:{&quot;id&quot;:&quot;3416&quot;},&quot;arg2&quot;:{&quot;id&quot;:&quot;3417&quot;},&quot;arg3&quot;:{&quot;id&quot;:&quot;3416&quot;},&quot;discrete&quot;:false,&quot;dist&quot;:&quot;lognormal&quot;,&quot;n&quot;:400,&quot;source_c&quot;:{&quot;id&quot;:&quot;3404&quot;},&quot;source_p&quot;:{&quot;id&quot;:&quot;3403&quot;},&quot;xrange&quot;:{&quot;id&quot;:&quot;3339&quot;}},&quot;code&quot;:&quot;function linspace(start, stop, n) {\\n\\tvar x = [];\\n\\tvar currValue = start;\\n\\tvar step = (stop - start) / (n - 1);\\n\\tfor (var i = 0; i &lt; n; i++) {\\n\\t\\tx.push(currValue);\\n\\t\\tcurrValue += step;\\n\\t}\\n\\treturn x;\\n}\\n\\nfunction update_y_p(probFun, x_p, arg1, arg2, arg3) {\\n    // Compute PMF/PDF\\n    var y_p = [];\\n    for (var i = 0; i &lt; x_p.length; i++) {\\n      y_p.push(probFun(x_p[i], arg1, arg2, arg3));\\n    }\\n\\n    return y_p;\\n}\\n\\nfunction update_y_c_continuous(cdfFun, x_c, arg1, arg2, arg3) {\\n    var y_c = [];\\n    for (var i = 0; i &lt; x_c.length; i ++)\\n        y_c.push(cdfFun(x_c[i], arg1, arg2, arg3));\\n\\n    return y_c;\\n}\\n\\nfunction erf(x) {\\n    // Error function using polynomial approximation (accurate to about 10^-7)\\n    var a = [1.00002368,\\n             0.37409196,\\n             0.09678418,\\n             -0.18628806,\\n             0.27886807,\\n             -1.13520398,\\n             1.48851587,\\n             -0.82215223,\\n             0.17087277];\\n\\n    var t = 1 / (1 + Math.abs(x)/2);\\n    var expSum = -Math.pow(x, 2) - 1.26551223;\\n\\n    for (var i = 0; i &lt; a.length; i++) {\\n        expSum += a[i] * Math.pow(t, i+1);\\n    }\\n\\n    var result = 1 - t * Math.exp(expSum);\\n\\n    if (x &lt; 0) return -result;\\n    return result;\\n}\\n\\n\\n\\nfunction probFun(x, mu, sigma, {}) {\\n    if (x &lt;= 0) return NaN;\\n\\n    var expTerm = (Math.pow(Math.log(x) - mu, 2) / 2.0 / Math.pow(sigma, 2))\\n    return Math.exp(-expTerm) / x / sigma / Math.sqrt(2 * Math.PI);\\n}\\n\\nfunction cdfFun(x, mu, sigma, {}) {\\n    if (x &lt;= 0) return 0.0;\\n\\n    return (1 + erf((Math.log(x) - mu) / sigma / Math.sqrt(2))) / 2;\\n}\\n\\n// Extract data from sources\\nvar data_p = source_p.data;\\nvar data_c = source_c.data;\\nvar x_p = data_p[&#x27;x&#x27;];\\nvar y_p = data_p[&#x27;y_p&#x27;];\\nvar x_c = data_c[&#x27;x&#x27;];\\nvar y_c = data_c[&#x27;y_c&#x27;];\\nvar xRangeMin = xrange.start;\\nvar xRangeMax = xrange.end;\\n\\n// Make corrections for start and end points based on support\\n// We&#x27;re not doing this now because we want to allow zooming\\n// JS codes now make anything outside of support NaN.\\n// if (dist == &#x27;lognormal&#x27; \\n//     || dist == &#x27;gamma&#x27; \\n//     || dist == &#x27;exponential&#x27; \\n//     || dist == &#x27;inv_gamma&#x27;\\n//     || dist == &#x27;weibull&#x27;) {\\n// \\txRangeMin = 0.0;\\n// }\\n// else if (dist == &#x27;beta&#x27;) { \\n//     xRangeMin = 0.0;\\n//     xRangeMax = 1.0;\\n// }\\n\\n// x-values to evaluate PDF and CDF\\nx_p = linspace(xRangeMin, xRangeMax, n);\\nx_c = x_p;\\n\\n// Update sources with new x-values\\nsource_p.data[&#x27;x&#x27;] = x_p;\\nsource_c.data[&#x27;x&#x27;] = x_c;\\n\\n// Update the PDF and CDF\\nsource_p.data[&#x27;y_p&#x27;] = update_y_p(probFun, \\n    x_p, arg1.value, arg2.value, arg3.value);\\nsource_c.data[&#x27;y_c&#x27;] = update_y_c_continuous(cdfFun, \\n    x_c, arg1.value, arg2.value, arg3.value);\\n\\nsource_p.change.emit();\\nsource_c.change.emit();\\n&quot;},&quot;id&quot;:&quot;3415&quot;,&quot;type&quot;:&quot;CustomJS&quot;},{&quot;attributes&quot;:{&quot;toolbar&quot;:{&quot;id&quot;:&quot;3453&quot;}},&quot;id&quot;:&quot;3454&quot;,&quot;type&quot;:&quot;ToolbarBox&quot;},{&quot;attributes&quot;:{&quot;children&quot;:[[{&quot;id&quot;:&quot;3336&quot;},0,0],[{&quot;id&quot;:&quot;3429&quot;},0,1],[{&quot;id&quot;:&quot;3369&quot;},0,2]]},&quot;id&quot;:&quot;3452&quot;,&quot;type&quot;:&quot;GridBox&quot;},{&quot;attributes&quot;:{&quot;js_property_callbacks&quot;:{&quot;change:value&quot;:[{&quot;id&quot;:&quot;3425&quot;}]},&quot;value&quot;:&quot;1.0&quot;,&quot;width&quot;:70},&quot;id&quot;:&quot;3421&quot;,&quot;type&quot;:&quot;TextInput&quot;},{&quot;attributes&quot;:{},&quot;id&quot;:&quot;3391&quot;,&quot;type&quot;:&quot;SaveTool&quot;},{&quot;attributes&quot;:{&quot;js_property_callbacks&quot;:{&quot;change:value&quot;:[{&quot;id&quot;:&quot;3424&quot;}]},&quot;value&quot;:&quot;0.1&quot;,&quot;width&quot;:70},&quot;id&quot;:&quot;3419&quot;,&quot;type&quot;:&quot;TextInput&quot;}],&quot;root_ids&quot;:[&quot;3457&quot;]},&quot;title&quot;:&quot;Bokeh Application&quot;,&quot;version&quot;:&quot;2.1.1&quot;}}';
                  var render_items = [{"docid":"d272b517-ce2f-4f23-b491-8afa47c06ac3","root_ids":["3457"],"roots":{"3457":"48896e10-1dc2-4e38-a914-8da33175265b"}}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    var attempts = 0;
                    var timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        clearInterval(timer);
                        embed_document(root);
                      } else {
                        attempts++;
                        if (attempts > 100) {
                          clearInterval(timer);
                          console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                        }
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
        function(Bokeh) {
        
        
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
        
      }
    
      if (root._bokeh_is_loading === 0) {
        console.debug("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(css_urls, js_urls, function() {
          console.debug("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();
(function() {
  var fn = function() {
    
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = false;
    
      if (typeof root._bokeh_onload_callbacks === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      
      
    
      var element = document.getElementById("8a75e706-7d63-4412-a9f5-e5d979195e6c");
        if (element == null) {
          console.warn("Bokeh: autoload.js configured with elementid '8a75e706-7d63-4412-a9f5-e5d979195e6c' but no matching script tag was found.")
        }
      
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) {
            if (callback != null)
              callback();
          });
        } finally {
          delete root._bokeh_onload_callbacks
        }
        console.debug("Bokeh: all callbacks have finished");
      }
    
      function load_libs(css_urls, js_urls, callback) {
        if (css_urls == null) css_urls = [];
        if (js_urls == null) js_urls = [];
    
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.debug("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.debug("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = css_urls.length + js_urls.length;
    
        function on_load() {
          root._bokeh_is_loading--;
          if (root._bokeh_is_loading === 0) {
            console.debug("Bokeh: all BokehJS libraries/stylesheets loaded");
            run_callbacks()
          }
        }
    
        function on_error(url) {
          console.error("failed to load " + url);
        }
    
        for (let i = 0; i < css_urls.length; i++) {
          const url = css_urls[i];
          const element = document.createElement("link");
          element.onload = on_load;
          element.onerror = on_error.bind(null, url);
          element.rel = "stylesheet";
          element.type = "text/css";
          element.href = url;
          console.debug("Bokeh: injecting link tag for BokehJS stylesheet: ", url);
          document.body.appendChild(element);
        }
    
        const hashes = {"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.3.min.js": "dM3QQsP+wXdHg42wTqW85BjZQdLNNIXqlPw/BgKoExPmTG7ZLML4EGqLMfqHT6ON", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.3.min.js": "8x57I4YuIfu8XyZfFo0XVr2WAT8EK4rh/uDe3wF7YuW2FNUSNEpJbsPaB1nJ2fz2", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.3.min.js": "3QTqdz9LyAm2i0sG5XTePsHec3UHWwVsrOL68SYRoAXsafvfAyqtQ+h440+qIBhS"};
    
        for (let i = 0; i < js_urls.length; i++) {
          const url = js_urls[i];
          const element = document.createElement('script');
          element.onload = on_load;
          element.onerror = on_error.bind(null, url);
          element.async = false;
          element.src = url;
          if (url in hashes) {
            element.crossOrigin = "anonymous";
            element.integrity = "sha384-" + hashes[url];
          }
          console.debug("Bokeh: injecting script tag for BokehJS library: ", url);
          document.head.appendChild(element);
        }
      };
    
      function inject_raw_css(css) {
        const element = document.createElement("style");
        element.appendChild(document.createTextNode(css));
        document.body.appendChild(element);
      }
    
      
      var js_urls = ["https://cdn.bokeh.org/bokeh/release/bokeh-2.3.3.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.3.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.3.min.js"];
      var css_urls = [];
      
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          (function() {
            var fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                    
                  var docs_json = '{"a6490198-3773-4231-b7ce-4fb750e67f81":{"defs":[],"roots":{"references":[{"attributes":{"axis_label":"y","formatter":{"id":"3891"},"major_label_policy":{"id":"3890"},"ticker":{"id":"3803"}},"id":"3802","type":"LinearAxis"},{"attributes":{},"id":"3903","type":"AllLabels"},{"attributes":{"axis_label":"y","formatter":{"id":"3904"},"major_label_policy":{"id":"3903"},"ticker":{"id":"3836"}},"id":"3835","type":"LinearAxis"},{"attributes":{},"id":"3904","type":"BasicTickFormatter"},{"attributes":{"bottom_units":"screen","fill_alpha":0.5,"fill_color":"lightgrey","left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"3816","type":"BoxAnnotation"},{"attributes":{"line_alpha":0.1,"line_color":"#1f77b4","line_width":2,"x":{"field":"x"},"y":{"field":"y_c"}},"id":"3862","type":"Line"},{"attributes":{},"id":"3893","type":"Selection"},{"attributes":{},"id":"3831","type":"LinearScale"},{"attributes":{"axis":{"id":"3835"},"ticker":null},"id":"3838","type":"Grid"},{"attributes":{"data":{"x":{"__ndarray__":"AAAAAAAAAACgmoFqBqqZP6CagWoGqqk/+DPhz4Q/sz+gmoFqBqq5P6QAkQJECsA/+DPhz4Q/wz9MZzGdxXTGP6CagWoGqsk/9M3RN0ffzD+kAJECRArQP04aOWnkpNE/+DPhz4Q/0z+iTYk2JdrUP0xnMZ3FdNY/9oDZA2YP2D+gmoFqBqrZP0q0KdGmRNs/9M3RN0ff3D+e53me53neP6QAkQJECuA/eQ3lNZTX4D9OGjlp5KThPyMnjZw0cuI/+DPhz4Q/4z/NQDUD1QzkP6JNiTYl2uQ/d1rdaXWn5T9MZzGdxXTmPyF0hdAVQuc/9oDZA2YP6D/LjS03ttzoP6CagWoGquk/dafVnVZ36j9KtCnRpkTrPx/BfQT3Eew/9M3RN0ff7D/J2iVrl6ztP57neZ7nee4/c/TN0TdH7z+kAJECRArwPw4HOxzscPA/eQ3lNZTX8D/kE49PPD7xP04aOWnkpPE/uCDjgowL8j8jJ42cNHLyP44tN7bc2PI/+DPhz4Q/8z9iOovpLKbzP81ANQPVDPQ/OEffHH1z9D+iTYk2Jdr0PwxUM1DNQPU/d1rdaXWn9T/iYIeDHQ72P0xnMZ3FdPY/tm3btm3b9j8hdIXQFUL3P4x6L+q9qPc/9oDZA2YP+D9gh4MdDnb4P8uNLTe23Pg/NpTXUF5D+T+gmoFqBqr5PwqhK4SuEPo/dafVnVZ3+j/grX+3/t36P0q0KdGmRPs/tLrT6k6r+z8fwX0E9xH8P4rHJx6fePw/9M3RN0ff/D9e1HtR70X9P8naJWuXrP0/NOHPhD8T/j+e53me53n+PwjuI7iP4P4/c/TN0TdH/z/e+nfr363/P6QAkQJECgBA2QNmD5g9AEAOBzsc7HAAQEQKEClApABAeQ3lNZTXAECuELpC6AoBQOQTj088PgFAGRdkXJBxAUBOGjlp5KQBQIMdDnY42AFAuCDjgowLAkDuI7iP4D4CQCMnjZw0cgJAWCpiqYilAkCOLTe23NgCQMMwDMMwDANA+DPhz4Q/A0AtN7bc2HIDQGI6i+kspgNAmD1g9oDZA0DNQDUD1QwEQAJEChApQARAOEffHH1zBEBtSrQp0aYEQKJNiTYl2gRA11BeQ3kNBUAMVDNQzUAFQEJXCF0hdAVAd1rdaXWnBUCsXbJ2ydoFQOJgh4MdDgZAF2RckHFBBkBMZzGdxXQGQIFqBqoZqAZAtm3btm3bBkDscLDDwQ4HQCF0hdAVQgdAVnda3Wl1B0CMei/qvagHQMF9BPcR3AdA9oDZA2YPCEArhK4QukIIQGCHgx0OdghAlopYKmKpCEDLjS03ttwIQACRAkQKEAlANpTXUF5DCUBrl6xdsnYJQKCagWoGqglA1Z1Wd1rdCUAKoSuErhAKQECkAJECRApAdafVnVZ3CkCqqqqqqqoKQOCtf7f+3QpAFbFUxFIRC0BKtCnRpkQLQH+3/t36dwtAtLrT6k6rC0Dqvaj3ot4LQB/BfQT3EQxAVMRSEUtFDECKxycen3gMQL/K/CrzqwxA9M3RN0ffDEAp0aZEmxINQF7Ue1HvRQ1AlNdQXkN5DUDJ2iVrl6wNQP7d+nfr3w1ANOHPhD8TDkBp5KSRk0YOQJ7neZ7neQ5A0+pOqzutDkAI7iO4j+AOQD7x+MTjEw9Ac/TN0TdHD0Co96Lei3oPQN76d+vfrQ9AE/5M+DPhD0CkAJECRAoQQD+C+wjuIxBA2QNmD5g9EEB0hdAVQlcQQA4HOxzscBBAqYilIpaKEEBEChApQKQQQN6Lei/qvRBAeQ3lNZTXEEAUj088PvEQQK4QukLoChFASZIkSZIkEUDkE49PPD4RQH6V+VXmVxFAGRdkXJBxEUCzmM5iOosRQE4aOWnkpBFA6Zujb46+EUCDHQ52ONgRQB6feHzi8RFAuCDjgowLEkBTok2JNiUSQO4juI/gPhJAiKUilopYEkAjJ42cNHISQL6o96LeixJAWCpiqYilEkDzq8yvMr8SQI4tN7bc2BJAKK+hvIbyEkDDMAzDMAwTQF2ydsnaJRNA+DPhz4Q/E0CTtUvWLlkTQC03ttzYchNAyLgg44KME0BiOovpLKYTQP279e/WvxNAmD1g9oDZE0Ayv8r8KvMTQM1ANQPVDBRAaMKfCX8mFEACRAoQKUAUQJ3FdBbTWRRAOEffHH1zFEDSyEkjJ40UQG1KtCnRphRAB8weMHvAFECiTYk2JdoUQD3P8zzP8xRA11BeQ3kNFUBy0shJIycVQAxUM1DNQBVAp9WdVndaFUBCVwhdIXQVQNzYcmPLjRVAd1rdaXWnFUAS3EdwH8EVQKxdsnbJ2hVAR98cfXP0FUDiYIeDHQ4WQHzi8YnHJxZAF2RckHFBFkCx5caWG1sWQExnMZ3FdBZA5+ibo2+OFkCBagaqGagWQBzscLDDwRZAtm3btm3bFkBR70W9F/UWQOxwsMPBDhdAhvIaymsoF0AhdIXQFUIXQLz179a/WxdAVnda3Wl1F0Dx+MTjE48XQIx6L+q9qBdAJvyZ8GfCF0DBfQT3EdwXQFv/bv279RdA9oDZA2YPGECRAkQKECkYQCuErhC6QhhAxgUZF2RcGEBgh4MdDnYYQPsI7iO4jxhAlopYKmKpGEAwDMMwDMMYQMuNLTe23BhAZg+YPWD2GEAAkQJEChAZQJsSbUq0KRlANpTXUF5DGUDQFUJXCF0ZQGuXrF2ydhlABRkXZFyQGUCgmoFqBqoZQDsc7HCwwxlA1Z1Wd1rdGUBwH8F9BPcZQAqhK4SuEBpApSKWilgqGkBApACRAkQaQNola5esXRpAdafVnVZ3GkAQKUCkAJEaQKqqqqqqqhpARSwVsVTEGkDgrX+3/t0aQHov6r2o9xpAFbFUxFIRG0CvMr/K/CobQEq0KdGmRBtA5TWU11BeG0B/t/7d+ncbQBo5aeSkkRtAtLrT6k6rG0BPPD7x+MQbQOq9qPei3htAhD8T/kz4G0AfwX0E9xEcQLpC6AqhKxxAVMRSEUtFHEDvRb0X9V4cQIrHJx6feBxAJEmSJEmSHEC/yvwq86scQFlMZzGdxRxA9M3RN0ffHECPTzw+8fgcQCnRpkSbEh1AxFIRS0UsHUBe1HtR70UdQPlV5leZXx1AlNdQXkN5HUAuWbtk7ZIdQMnaJWuXrB1AZFyQcUHGHUD+3fp3698dQJlfZX6V+R1ANOHPhD8THkDOYjqL6SweQGnkpJGTRh5AA2YPmD1gHkCe53me53keQDlp5KSRkx5A0+pOqzutHkBubLmx5cYeQAjuI7iP4B5Ao2+Ovjn6HkA+8fjE4xMfQNhyY8uNLR9Ac/TN0TdHH0AOdjjY4WAfQKj3ot6Leh9AQ3kN5TWUH0De+nfr360fQHh84vGJxx9AE/5M+DPhH0Ctf7f+3fofQKQAkQJECiBAcUHGBRkXIEA/gvsI7iMgQAzDMAzDMCBA2QNmD5g9IECnRJsSbUogQHSF0BVCVyBAQcYFGRdkIEAOBzsc7HAgQNxHcB/BfSBAqYilIpaKIEB2ydola5cgQEQKEClApCBAEUtFLBWxIEDei3ov6r0gQKzMrzK/yiBAeQ3lNZTXIEBGTho5aeQgQBSPTzw+8SBA4c+EPxP+IECuELpC6AohQHxR70W9FyFASZIkSZIkIUAW01lMZzEhQOQTj088PiFAsVTEUhFLIUB+lflV5lchQEvWLlm7ZCFAGRdkXJBxIUDmV5lfZX4hQLOYzmI6iyFAgdkDZg+YIUBOGjlp5KQhQBtbbmy5sSFA6Zujb46+IUC23NhyY8shQIMdDnY42CFAUV5DeQ3lIUAen3h84vEhQOvfrX+3/iFAuCDjgowLIkCGYRiGYRgiQFOiTYk2JSJAIOOCjAsyIkDuI7iP4D4iQLtk7ZK1SyJAiKUilopYIkBW5leZX2UiQCMnjZw0ciJA8GfCnwl/IkC+qPei3osiQIvpLKazmCJAWCpiqYilIkAma5esXbIiQPOrzK8yvyJAwOwBswfMIkCOLTe23NgiQFtubLmx5SJAKK+hvIbyIkD179a/W/8iQMMwDMMwDCNAkHFBxgUZI0BdsnbJ2iUjQCvzq8yvMiNA+DPhz4Q/I0DFdBbTWUwjQJO1S9YuWSNAYPaA2QNmI0AtN7bc2HIjQPt369+tfyNAyLgg44KMI0CV+VXmV5kjQGI6i+kspiNAMHvA7AGzI0D9u/Xv1r8jQMr8KvOrzCNAmD1g9oDZI0BlfpX5VeYjQDK/yvwq8yNAAAAAAAAAJEA=","dtype":"float64","order":"little","shape":[400]},"y_c":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[400]}},"selected":{"id":"3895"},"selection_policy":{"id":"3896"}},"id":"3859","type":"ColumnDataSource"},{"attributes":{},"id":"3894","type":"UnionRenderers"},{"attributes":{"line_color":"#1f77b4","line_width":2,"x":{"field":"x"},"y":{"field":"y_c"}},"id":"3861","type":"Line"},{"attributes":{},"id":"3836","type":"BasicTicker"},{"attributes":{"data_source":{"id":"3859"},"glyph":{"id":"3861"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"3862"},"view":{"id":"3864"}},"id":"3863","type":"GlyphRenderer"},{"attributes":{"source":{"id":"3859"}},"id":"3864","type":"CDSView"},{"attributes":{},"id":"3833","type":"LinearScale"},{"attributes":{"data":{"x":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[400]},"y_p":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[400]}},"selected":{"id":"3893"},"selection_policy":{"id":"3894"}},"id":"3858","type":"ColumnDataSource"},{"attributes":{"source":{"id":"3858"}},"id":"3869","type":"CDSView"},{"attributes":{"children":[{"id":"3874"},{"id":"3872"},{"id":"3876"}]},"id":"3882","type":"Row"},{"attributes":{"line_color":"#1f77b4","line_width":2,"x":{"field":"x"},"y":{"field":"y_p"}},"id":"3866","type":"Line"},{"attributes":{"line_alpha":0.1,"line_color":"#1f77b4","line_width":2,"x":{"field":"x"},"y":{"field":"y_p"}},"id":"3867","type":"Line"},{"attributes":{"data_source":{"id":"3858"},"glyph":{"id":"3866"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"3867"},"view":{"id":"3869"}},"id":"3868","type":"GlyphRenderer"},{"attributes":{"args":{"max_value":"Infinity","min_value":"0","slider":{"id":"3871"}},"code":"\\n    slider.start = Math.max(min_value, Number(cb_obj.value));\\n"},"id":"3877","type":"CustomJS"},{"attributes":{"args":{"arg1":{"id":"3871"},"arg2":{"id":"3872"},"arg3":{"id":"3871"},"discrete":false,"dist":"pareto","n":400,"source_c":{"id":"3859"},"source_p":{"id":"3858"},"xrange":{"id":"3794"}},"code":"function linspace(start, stop, n) {\\n\\tvar x = [];\\n\\tvar currValue = start;\\n\\tvar step = (stop - start) / (n - 1);\\n\\tfor (var i = 0; i &lt; n; i++) {\\n\\t\\tx.push(currValue);\\n\\t\\tcurrValue += step;\\n\\t}\\n\\treturn x;\\n}\\n\\nfunction update_y_p(probFun, x_p, arg1, arg2, arg3) {\\n    // Compute PMF/PDF\\n    var y_p = [];\\n    for (var i = 0; i &lt; x_p.length; i++) {\\n      y_p.push(probFun(x_p[i], arg1, arg2, arg3));\\n    }\\n\\n    return y_p;\\n}\\n\\nfunction update_y_c_continuous(cdfFun, x_c, arg1, arg2, arg3) {\\n    var y_c = [];\\n    for (var i = 0; i &lt; x_c.length; i ++)\\n        y_c.push(cdfFun(x_c[i], arg1, arg2, arg3));\\n\\n    return y_c;\\n}\\n\\nfunction probFun(x, y_min, alpha, {}) {\\n    if (x &lt; y_min) return NaN;\\n\\n    var logp = Math.log(alpha) + alpha * Math.log(y_min) - (alpha + 1) * Math.log(x); \\n    return Math.exp(logp);\\n}\\n\\nfunction cdfFun(x, y_min, alpha, {}) {\\n    if (x &lt; y_min) return 0.0;\\n\\n    return 1 - Math.pow(y_min / x, alpha);\\n}\\n\\n// Extract data from sources\\nvar data_p = source_p.data;\\nvar data_c = source_c.data;\\nvar x_p = data_p[&#x27;x&#x27;];\\nvar y_p = data_p[&#x27;y_p&#x27;];\\nvar x_c = data_c[&#x27;x&#x27;];\\nvar y_c = data_c[&#x27;y_c&#x27;];\\nvar xRangeMin = xrange.start;\\nvar xRangeMax = xrange.end;\\n\\n// Make corrections for start and end points based on support\\n// We&#x27;re not doing this now because we want to allow zooming\\n// JS codes now make anything outside of support NaN.\\n// if (dist == &#x27;lognormal&#x27; \\n//     || dist == &#x27;gamma&#x27; \\n//     || dist == &#x27;exponential&#x27; \\n//     || dist == &#x27;inv_gamma&#x27;\\n//     || dist == &#x27;weibull&#x27;) {\\n// \\txRangeMin = 0.0;\\n// }\\n// else if (dist == &#x27;beta&#x27;) { \\n//     xRangeMin = 0.0;\\n//     xRangeMax = 1.0;\\n// }\\n\\n// x-values to evaluate PDF and CDF\\nx_p = linspace(xRangeMin, xRangeMax, n);\\nx_c = x_p;\\n\\n// Update sources with new x-values\\nsource_p.data[&#x27;x&#x27;] = x_p;\\nsource_c.data[&#x27;x&#x27;] = x_c;\\n\\n// Update the PDF and CDF\\nsource_p.data[&#x27;y_p&#x27;] = update_y_p(probFun, \\n    x_p, arg1.value, arg2.value, arg3.value);\\nsource_c.data[&#x27;y_c&#x27;] = update_y_c_continuous(cdfFun, \\n    x_c, arg1.value, arg2.value, arg3.value);\\n\\nsource_p.change.emit();\\nsource_c.change.emit();\\n"},"id":"3870","type":"CustomJS"},{"attributes":{},"id":"3895","type":"Selection"},{"attributes":{"end":4,"js_property_callbacks":{"change:value":[{"id":"3870"}]},"start":0.01,"step":0.01,"title":"\\u03b1","value":2},"id":"3872","type":"Slider"},{"attributes":{},"id":"3896","type":"UnionRenderers"},{"attributes":{"js_property_callbacks":{"change:value":[{"id":"3879"}]},"value":"0.01","width":70},"id":"3874","type":"TextInput"},{"attributes":{"js_property_callbacks":{"change:value":[{"id":"3877"}]},"value":"0.1","width":70},"id":"3873","type":"TextInput"},{"attributes":{"end":1.0,"js_property_callbacks":{"change:value":[{"id":"3870"}]},"start":0.1,"step":0.01,"title":"ymin","value":0.1},"id":"3871","type":"Slider"},{"attributes":{"args":{"max_value":"Infinity","min_value":"0","slider":{"id":"3871"}},"code":"\\nslider.end = Math.min(max_value, Number(cb_obj.value));\\n"},"id":"3878","type":"CustomJS"},{"attributes":{"js_property_callbacks":{"change:value":[{"id":"3878"}]},"value":"1.0","width":70},"id":"3875","type":"TextInput"},{"attributes":{"js_property_callbacks":{"change:value":[{"id":"3880"}]},"value":"4","width":70},"id":"3876","type":"TextInput"},{"attributes":{},"id":"3844","type":"WheelZoomTool"},{"attributes":{},"id":"3887","type":"AllLabels"},{"attributes":{"axis_label":"CDF","formatter":{"id":"3901"},"major_label_policy":{"id":"3900"},"ticker":{"id":"3840"}},"id":"3839","type":"LinearAxis"},{"attributes":{"axis":{"id":"3839"},"dimension":1,"ticker":null},"id":"3842","type":"Grid"},{"attributes":{},"id":"3840","type":"BasicTicker"},{"attributes":{"args":{"max_value":"Infinity","min_value":"0","slider":{"id":"3872"}},"code":"\\nslider.end = Math.min(max_value, Number(cb_obj.value));\\n"},"id":"3880","type":"CustomJS"},{"attributes":{"children":[{"id":"3911"},{"id":"3913"}]},"id":"3914","type":"Row"},{"attributes":{"args":{"max_value":"Infinity","min_value":"0","slider":{"id":"3872"}},"code":"\\n    slider.start = Math.max(min_value, Number(cb_obj.value));\\n"},"id":"3879","type":"CustomJS"},{"attributes":{},"id":"3848","type":"HelpTool"},{"attributes":{"height":10},"id":"3915","type":"Spacer"},{"attributes":{},"id":"3843","type":"PanTool"},{"attributes":{"overlay":{"id":"3849"}},"id":"3845","type":"BoxZoomTool"},{"attributes":{},"id":"3846","type":"SaveTool"},{"attributes":{},"id":"3847","type":"ResetTool"},{"attributes":{"children":[{"id":"3883"},{"id":"3915"},{"id":"3914"}]},"id":"3916","type":"Column"},{"attributes":{},"id":"3798","type":"LinearScale"},{"attributes":{"active_multi":null,"tools":[{"id":"3810"},{"id":"3811"},{"id":"3812"},{"id":"3813"},{"id":"3814"},{"id":"3815"}]},"id":"3817","type":"Toolbar"},{"attributes":{},"id":"3888","type":"BasicTickFormatter"},{"attributes":{"background_fill_alpha":0,"below":[{"id":"3835"}],"border_fill_alpha":0,"center":[{"id":"3838"},{"id":"3842"}],"frame_height":175,"frame_width":300,"left":[{"id":"3839"}],"renderers":[{"id":"3863"}],"title":{"id":"3825"},"toolbar":{"id":"3850"},"toolbar_location":null,"x_range":{"id":"3794"},"x_scale":{"id":"3831"},"y_range":{"id":"3857"},"y_scale":{"id":"3833"}},"id":"3824","subtype":"Figure","type":"Plot"},{"attributes":{"children":[{"id":"3873"},{"id":"3871"},{"id":"3875"}]},"id":"3881","type":"Row"},{"attributes":{"children":[{"id":"3881"},{"id":"3882"}]},"id":"3883","type":"Column"},{"attributes":{},"id":"3800","type":"LinearScale"},{"attributes":{"js_property_callbacks":{"change:end":[{"id":"3870"}],"change:start":[{"id":"3870"}]},"range_padding":0},"id":"3794","type":"DataRange1d"},{"attributes":{},"id":"3813","type":"SaveTool"},{"attributes":{"overlay":{"id":"3816"}},"id":"3812","type":"BoxZoomTool"},{"attributes":{},"id":"3810","type":"PanTool"},{"attributes":{},"id":"3814","type":"ResetTool"},{"attributes":{"active_multi":null,"tools":[{"id":"3843"},{"id":"3844"},{"id":"3845"},{"id":"3846"},{"id":"3847"},{"id":"3848"}]},"id":"3850","type":"Toolbar"},{"attributes":{},"id":"3815","type":"HelpTool"},{"attributes":{},"id":"3807","type":"BasicTicker"},{"attributes":{},"id":"3890","type":"AllLabels"},{"attributes":{"axis":{"id":"3806"},"dimension":1,"ticker":null},"id":"3809","type":"Grid"},{"attributes":{"axis_label":"PDF","formatter":{"id":"3888"},"major_label_policy":{"id":"3887"},"ticker":{"id":"3807"}},"id":"3806","type":"LinearAxis"},{"attributes":{"toolbars":[{"id":"3817"},{"id":"3850"}],"tools":[{"id":"3810"},{"id":"3811"},{"id":"3812"},{"id":"3813"},{"id":"3814"},{"id":"3815"},{"id":"3843"},{"id":"3844"},{"id":"3845"},{"id":"3846"},{"id":"3847"},{"id":"3848"}]},"id":"3912","type":"ProxyToolbar"},{"attributes":{"text":" "},"id":"3825","type":"Title"},{"attributes":{},"id":"3811","type":"WheelZoomTool"},{"attributes":{"children":[[{"id":"3791"},0,0],[{"id":"3884"},0,1],[{"id":"3824"},0,2]]},"id":"3911","type":"GridBox"},{"attributes":{},"id":"3891","type":"BasicTickFormatter"},{"attributes":{},"id":"3900","type":"AllLabels"},{"attributes":{},"id":"3901","type":"BasicTickFormatter"},{"attributes":{"toolbar":{"id":"3912"}},"id":"3913","type":"ToolbarBox"},{"attributes":{"axis":{"id":"3802"},"ticker":null},"id":"3805","type":"Grid"},{"attributes":{},"id":"3803","type":"BasicTicker"},{"attributes":{"end":1.05,"start":-0.05},"id":"3857","type":"Range1d"},{"attributes":{"bottom_units":"screen","fill_alpha":0.5,"fill_color":"lightgrey","left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"3849","type":"BoxAnnotation"},{"attributes":{"width":30},"id":"3884","type":"Spacer"},{"attributes":{"background_fill_alpha":0,"below":[{"id":"3802"}],"border_fill_alpha":0,"center":[{"id":"3805"},{"id":"3809"}],"frame_height":175,"frame_width":300,"left":[{"id":"3806"}],"renderers":[{"id":"3868"}],"title":{"id":"3792"},"toolbar":{"id":"3817"},"toolbar_location":null,"x_range":{"id":"3794"},"x_scale":{"id":"3798"},"y_range":{"id":"3796"},"y_scale":{"id":"3800"}},"id":"3791","subtype":"Figure","type":"Plot"},{"attributes":{"text":"Pareto"},"id":"3792","type":"Title"},{"attributes":{},"id":"3796","type":"DataRange1d"}],"root_ids":["3916"]},"title":"Bokeh Application","version":"2.3.3"}}';
                  var render_items = [{"docid":"a6490198-3773-4231-b7ce-4fb750e67f81","root_ids":["3916"],"roots":{"3916":"8a75e706-7d63-4412-a9f5-e5d979195e6c"}}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    var attempts = 0;
                    var timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        clearInterval(timer);
                        embed_document(root);
                      } else {
                        attempts++;
                        if (attempts > 100) {
                          clearInterval(timer);
                          console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                        }
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
        function(Bokeh) {
        
        
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
        
      }
    
      if (root._bokeh_is_loading === 0) {
        console.debug("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(css_urls, js_urls, function() {
          console.debug("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();
(function() {
  var fn = function() {
    
    (function(root) {
      function now() {
        return new Date();
      }
    
      var force = false;
    
      if (typeof root._bokeh_onload_callbacks === "undefined" || force === true) {
        root._bokeh_onload_callbacks = [];
        root._bokeh_is_loading = undefined;
      }
    
      
      
    
      var element = document.getElementById("058d5518-0a46-4ac2-87d0-b19742b37c4d");
        if (element == null) {
          console.warn("Bokeh: autoload.js configured with elementid '058d5518-0a46-4ac2-87d0-b19742b37c4d' but no matching script tag was found.")
        }
      
    
      function run_callbacks() {
        try {
          root._bokeh_onload_callbacks.forEach(function(callback) {
            if (callback != null)
              callback();
          });
        } finally {
          delete root._bokeh_onload_callbacks
        }
        console.debug("Bokeh: all callbacks have finished");
      }
    
      function load_libs(css_urls, js_urls, callback) {
        if (css_urls == null) css_urls = [];
        if (js_urls == null) js_urls = [];
    
        root._bokeh_onload_callbacks.push(callback);
        if (root._bokeh_is_loading > 0) {
          console.debug("Bokeh: BokehJS is being loaded, scheduling callback at", now());
          return null;
        }
        if (js_urls == null || js_urls.length === 0) {
          run_callbacks();
          return null;
        }
        console.debug("Bokeh: BokehJS not loaded, scheduling load and callback at", now());
        root._bokeh_is_loading = css_urls.length + js_urls.length;
    
        function on_load() {
          root._bokeh_is_loading--;
          if (root._bokeh_is_loading === 0) {
            console.debug("Bokeh: all BokehJS libraries/stylesheets loaded");
            run_callbacks()
          }
        }
    
        function on_error(url) {
          console.error("failed to load " + url);
        }
    
        for (let i = 0; i < css_urls.length; i++) {
          const url = css_urls[i];
          const element = document.createElement("link");
          element.onload = on_load;
          element.onerror = on_error.bind(null, url);
          element.rel = "stylesheet";
          element.type = "text/css";
          element.href = url;
          console.debug("Bokeh: injecting link tag for BokehJS stylesheet: ", url);
          document.body.appendChild(element);
        }
    
        const hashes = {"https://cdn.bokeh.org/bokeh/release/bokeh-2.3.3.min.js": "dM3QQsP+wXdHg42wTqW85BjZQdLNNIXqlPw/BgKoExPmTG7ZLML4EGqLMfqHT6ON", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.3.min.js": "8x57I4YuIfu8XyZfFo0XVr2WAT8EK4rh/uDe3wF7YuW2FNUSNEpJbsPaB1nJ2fz2", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.3.min.js": "3QTqdz9LyAm2i0sG5XTePsHec3UHWwVsrOL68SYRoAXsafvfAyqtQ+h440+qIBhS"};
    
        for (let i = 0; i < js_urls.length; i++) {
          const url = js_urls[i];
          const element = document.createElement('script');
          element.onload = on_load;
          element.onerror = on_error.bind(null, url);
          element.async = false;
          element.src = url;
          if (url in hashes) {
            element.crossOrigin = "anonymous";
            element.integrity = "sha384-" + hashes[url];
          }
          console.debug("Bokeh: injecting script tag for BokehJS library: ", url);
          document.head.appendChild(element);
        }
      };
    
      function inject_raw_css(css) {
        const element = document.createElement("style");
        element.appendChild(document.createTextNode(css));
        document.body.appendChild(element);
      }
    
      
      var js_urls = ["https://cdn.bokeh.org/bokeh/release/bokeh-2.3.3.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.3.3.min.js", "https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.3.3.min.js"];
      var css_urls = [];
      
    
      var inline_js = [
        function(Bokeh) {
          Bokeh.set_log_level("info");
        },
        
        function(Bokeh) {
          (function() {
            var fn = function() {
              Bokeh.safely(function() {
                (function(root) {
                  function embed_document(root) {
                    
                  var docs_json = '{"00500176-509a-42cb-8902-d0f5c2499523":{"defs":[],"roots":{"references":[{"attributes":{"active_multi":null,"tools":[{"id":"2742"},{"id":"2743"},{"id":"2744"},{"id":"2745"},{"id":"2746"},{"id":"2747"}]},"id":"2749","type":"Toolbar"},{"attributes":{"background_fill_alpha":0,"below":[{"id":"2734"}],"border_fill_alpha":0,"center":[{"id":"2737"},{"id":"2741"}],"frame_height":175,"frame_width":300,"left":[{"id":"2738"}],"renderers":[{"id":"2762"}],"title":{"id":"2724"},"toolbar":{"id":"2749"},"toolbar_location":null,"x_range":{"id":"2693"},"x_scale":{"id":"2730"},"y_range":{"id":"2756"},"y_scale":{"id":"2732"}},"id":"2723","subtype":"Figure","type":"Plot"},{"attributes":{},"id":"2747","type":"HelpTool"},{"attributes":{},"id":"2792","type":"Selection"},{"attributes":{"children":[{"id":"2810"},{"id":"2812"}]},"id":"2813","type":"Row"},{"attributes":{},"id":"2745","type":"SaveTool"},{"attributes":{},"id":"2732","type":"LinearScale"},{"attributes":{"args":{"max_value":"Infinity","min_value":"-Infinity","slider":{"id":"2770"}},"code":"\\n    slider.start = Math.max(min_value, Number(cb_obj.value));\\n"},"id":"2776","type":"CustomJS"},{"attributes":{"data":{"x":{"__ndarray__":"AAAAAAAAAACASAEiBYiEP4BIASIFiJQ/wOwBswfMnj+ASAEiBYikP6CagWoGqqk/wOwBswfMrj9wH8F9BPexP4BIASIFiLQ/kHFBxgUZtz+gmoFqBqq5P7DDwQ4HO7w/wOwBswfMvj/oCqErhK7AP3AfwX0E98E/+DPhz4Q/wz+ASAEiBYjEPwhdIXSF0MU/kHFBxgUZxz8YhmEYhmHIP6CagWoGqsk/KK+hvIbyyj+ww8EOBzvMPzjY4WCHg80/wOwBswfMzj+kAJECRArQP+gKoSuErtA/LBWxVMRS0T9wH8F9BPfRP7Qp0aZEm9I/+DPhz4Q/0z88PvH4xOPTP4BIASIFiNQ/xFIRS0Us1T8IXSF0hdDVP0xnMZ3FdNY/kHFBxgUZ1z/Ue1HvRb3XPxiGYRiGYdg/XJBxQcYF2T+gmoFqBqrZP+SkkZNGTto/KK+hvIby2j9subHlxpbbP7DDwQ4HO9w/9M3RN0ff3D842OFgh4PdP3zi8YnHJ94/wOwBswfM3j8E9xHcR3DfP6QAkQJECuA/xgUZF2Rc4D/oCqErhK7gPwoQKUCkAOE/LBWxVMRS4T9OGjlp5KThP3AfwX0E9+E/kiRJkiRJ4j+0KdGmRJviP9YuWbtk7eI/+DPhz4Q/4z8aOWnkpJHjPzw+8fjE4+M/XkN5DeU15D+ASAEiBYjkP6JNiTYl2uQ/xFIRS0Us5T/mV5lfZX7lPwhdIXSF0OU/KmKpiKUi5j9MZzGdxXTmP25subHlxuY/kHFBxgUZ5z+ydsnaJWvnP9R7Ue9Fvec/9oDZA2YP6D8YhmEYhmHoPzqL6Syms+g/XJBxQcYF6T9+lflV5lfpP6CagWoGquk/wp8Jfyb86T/kpJGTRk7qPwaqGahmoOo/KK+hvIby6j9KtCnRpkTrP2y5seXGlus/jr45+ubo6z+ww8EOBzvsP9LISSMnjew/9M3RN0ff7D8W01lMZzHtPzjY4WCHg+0/Wt1pdafV7T984vGJxyfuP57neZ7nee4/wOwBswfM7j/i8YnHJx7vPwT3EdxHcO8/JvyZ8GfC7z+kAJECRArwPzUD1QxUM/A/xgUZF2Rc8D9XCF0hdIXwP+gKoSuErvA/eQ3lNZTX8D8KEClApADxP5sSbUq0KfE/LBWxVMRS8T+9F/Ve1HvxP04aOWnkpPE/3xx9c/TN8T9wH8F9BPfxPwEiBYgUIPI/kiRJkiRJ8j8jJ42cNHLyP7Qp0aZEm/I/RSwVsVTE8j/WLlm7ZO3yP2cxncV0FvM/+DPhz4Q/8z+JNiXalGjzPxo5aeSkkfM/qzut7rS68z88PvH4xOPzP81ANQPVDPQ/XkN5DeU19D/vRb0X9V70P4BIASIFiPQ/EUtFLBWx9D+iTYk2Jdr0PzNQzUA1A/U/xFIRS0Us9T9VVVVVVVX1P+ZXmV9lfvU/d1rdaXWn9T8IXSF0hdD1P5lfZX6V+fU/KmKpiKUi9j+7ZO2StUv2P0xnMZ3FdPY/3Wl1p9Wd9j9ubLmx5cb2P/9u/bv17/Y/kHFBxgUZ9z8hdIXQFUL3P7J2ydola/c/Q3kN5TWU9z/Ue1HvRb33P2V+lflV5vc/9oDZA2YP+D+Hgx0Odjj4PxiGYRiGYfg/qYilIpaK+D86i+ksprP4P8uNLTe23Pg/XJBxQcYF+T/tkrVL1i75P36V+VXmV/k/D5g9YPaA+T+gmoFqBqr5PzGdxXQW0/k/wp8Jfyb8+T9Tok2JNiX6P+SkkZNGTvo/dafVnVZ3+j8GqhmoZqD6P5esXbJ2yfo/KK+hvIby+j+5seXGlhv7P0q0KdGmRPs/27Zt27Zt+z9subHlxpb7P/279e/Wv/s/jr45+ubo+z8fwX0E9xH8P7DDwQ4HO/w/QcYFGRdk/D/SyEkjJ438P2PLjS03tvw/9M3RN0ff/D+F0BVCVwj9PxbTWUxnMf0/p9WdVnda/T842OFgh4P9P8naJWuXrP0/Wt1pdafV/T/r361/t/79P3zi8YnHJ/4/DeU1lNdQ/j+e53me53n+Py/qvaj3ov4/wOwBswfM/j9R70W9F/X+P+LxiccnHv8/c/TN0TdH/z8E9xHcR3D/P5X5VeZXmf8/JvyZ8GfC/z+3/t36d+v/P6QAkQJECgBA7AGzB8weAEA1A9UMVDMAQH4E9xHcRwBAxgUZF2RcAEAOBzsc7HAAQFcIXSF0hQBAoAl/JvyZAEDoCqErhK4AQDAMwzAMwwBAeQ3lNZTXAEDCDgc7HOwAQAoQKUCkAAFAUhFLRSwVAUCbEm1KtCkBQOQTj088PgFALBWxVMRSAUB0FtNZTGcBQL0X9V7UewFABhkXZFyQAUBOGjlp5KQBQJYbW25suQFA3xx9c/TNAUAoHp94fOIBQHAfwX0E9wFAuCDjgowLAkABIgWIFCACQEojJ42cNAJAkiRJkiRJAkDaJWuXrF0CQCMnjZw0cgJAbCivobyGAkC0KdGmRJsCQPwq86vMrwJARSwVsVTEAkCOLTe23NgCQNYuWbtk7QJAHjB7wOwBA0BnMZ3FdBYDQLAyv8r8KgNA+DPhz4Q/A0BANQPVDFQDQIk2JdqUaANA0jdH3xx9A0AaOWnkpJEDQGI6i+kspgNAqzut7rS6A0D0PM/zPM8DQDw+8fjE4wNAhD8T/kz4A0DNQDUD1QwEQBZCVwhdIQRAXkN5DeU1BECmRJsSbUoEQO9FvRf1XgRAOEffHH1zBECASAEiBYgEQMhJIyeNnARAEUtFLBWxBEBaTGcxncUEQKJNiTYl2gRA6k6rO63uBEAzUM1ANQMFQHxR70W9FwVAxFIRS0UsBUAMVDNQzUAFQFVVVVVVVQVAnlZ3Wt1pBUDmV5lfZX4FQC5Zu2TtkgVAd1rdaXWnBUDAW/9u/bsFQAhdIXSF0AVAUF5DeQ3lBUCZX2V+lfkFQOJgh4MdDgZAKmKpiKUiBkByY8uNLTcGQLtk7ZK1SwZABGYPmD1gBkBMZzGdxXQGQJRoU6JNiQZA3Wl1p9WdBkAma5esXbIGQG5subHlxgZAtm3btm3bBkD/bv279e8GQEhwH8F9BAdAkHFBxgUZB0DYcmPLjS0HQCF0hdAVQgdAanWn1Z1WB0CydsnaJWsHQPp369+tfwdAQ3kN5TWUB0CMei/qvagHQNR7Ue9FvQdAHH1z9M3RB0BlfpX5VeYHQK5/t/7d+gdA9oDZA2YPCEA+gvsI7iMIQIeDHQ52OAhA0IQ/E/5MCEAYhmEYhmEIQGCHgx0OdghAqYilIpaKCEDyiccnHp8IQDqL6SymswhAgowLMi7ICEDLjS03ttwIQBSPTzw+8QhAXJBxQcYFCUCkkZNGThoJQO2StUvWLglANpTXUF5DCUB+lflV5lcJQMaWG1tubAlAD5g9YPaACUBYmV9lfpUJQKCagWoGqglA6Jujb46+CUAxncV0FtMJQHqe53me5wlAwp8Jfyb8CUAKoSuErhAKQFOiTYk2JQpAnKNvjr45CkDkpJGTRk4KQCyms5jOYgpAdafVnVZ3CkC+qPei3osKQAaqGahmoApATqs7re60CkCXrF2ydskKQOCtf7f+3QpAKK+hvIbyCkBwsMPBDgcLQLmx5caWGwtAArMHzB4wC0BKtCnRpkQLQJK1S9YuWQtA27Zt27ZtC0AkuI/gPoILQGy5seXGlgtAtLrT6k6rC0D9u/Xv1r8LQEa9F/Ve1AtAjr45+uboC0DWv1v/bv0LQB/BfQT3EQxAaMKfCX8mDECww8EOBzsMQPjE4xOPTwxAQcYFGRdkDECKxycen3gMQNLISSMnjQxAGsprKK+hDEBjy40tN7YMQKzMrzK/ygxA9M3RN0ffDEA8z/M8z/MMQIXQFUJXCA1AztE3R98cDUAW01lMZzENQF7Ue1HvRQ1Ap9WdVndaDUDw1r9b/24NQDjY4WCHgw1AgNkDZg+YDUDJ2iVrl6wNQBLcR3AfwQ1AWt1pdafVDUCi3ot6L+oNQOvfrX+3/g1ANOHPhD8TDkB84vGJxycOQMTjE49PPA5ADeU1lNdQDkBW5leZX2UOQJ7neZ7neQ5A5uibo2+ODkAv6r2o96IOQHjr361/tw5AwOwBswfMDkAI7iO4j+AOQFHvRb0X9Q5AmvBnwp8JD0Di8YnHJx4PQCrzq8yvMg9Ac/TN0TdHD0C89e/Wv1sPQAT3EdxHcA9ATPgz4c+ED0CV+VXmV5kPQN76d+vfrQ9AJvyZ8GfCD0Bu/bv179YPQLf+3fp36w9AAAAAAAAAEEA=","dtype":"float64","order":"little","shape":[400]},"y_c":{"__ndarray__":"AAAAAAAAAADAZ5Rd7XekP0BPAKRacbQ/oA2jzaWZvj+IYyWgNVfEP0AJ3rKxVMk/kPlM2jtCzj9otDRzc47RP9hAxXX08NM/WHI1AlBH1j88DoxMS5DYPyzjwI/Dyto/EMpKpq/13D/Ie5VXIRDfP4iwGSyjjOA/HPLpfTSI4T/AV5tMeHriP6jmvNAwY+M/qCybti5C5D/4OXDhUBflPyyUYw2E4uU/QC/uUsKj5j8Mf4yOElvnP/gJ7q+HCOg/uPoF9D+s6D+Q1IINZEbpPxzdRD8m1+k/HJxrbMFe6j/K6YMheN3qP8yZQpqTU+s/qFkNx2LB6z+ueV1VOSfsP6rayL1uhew/XAA2Wl3c7D8YPnOGYSztP6b+F83Yde0/jCVEIiG57T+gN34tmPbtP4T7nqOaLu4/sA5qsYNh7j8+yyd3rI/uP1riTpVrue4/xCEMyhTf7j+8oz2f+ADvPxKfRChkH+8/VHbmzqA67z9elVIu9FLvP+gOR/ufaO8/WoI5+OF77z+2QFz084zvP2ZzUNQLnO8/lKNUo1up7z9AzcKrEbXvPxh9uZVYv+8/5qXXilfI7z+AMgJeMtDvP6YwPLYJ1+8/hiSuO/vc7z90CQ7GIeLvP9Itr4uV5u8/QPeWUGzq7z8KQQmVue3vPxISFMOO8O8/UIm2Wvvy7z/w2FEcDfXvP5bGJDHQ9u8/8EmiUU/47z8YcoLpk/nvP8qteTmm+u8/eOiNdo377z+OsArnT/zvPyzYHf3y/O8/ss8sb3v97z/ecPhN7f3vP/wvqRhM/u8/BMzgzpr+7z+6vvAA3P7vP9j5Vd4R/+8/GA2bQj7/7z/cv8HAYv/vP/yTVK2A/+8/eKc/J5n/7z8UGI8frf/vP8Z6L2C9/+8/GDzLkcr/7z9U5t1A1f/vP4ZjFOLd/+8/ZGgP1uT/7z+yUpts6v/vP1bxbufu/+8/3OuAfPL/7z/21gFY9f/vP9p1B573/+8/QDj0a/n/7z9osaTZ+v/vP86Pa/r7/+8/7oTj3fz/7z/YkJ2Q/f/vP3pEsRz+/+8/gsUziv7/7z/Grpnf/v/vP/BMByL//+8/kjCSVf//7z/QmHZ9///vP+DUQpz//+8/MmP6s///7z9YSjLG///vP2LoJ9T//+8/ND/T3v//7z8Cl/Xm///vP4wpJe3//+8/BGnW8f//7z9KWmP1///vP3BkEfj//+8/puQV+v//7z/4xpn7///vP1xXvPz//+8/7nSV/f//7z9uSDf+///vP8yYr/7//+8/rtII////7z/400r////vP2KIe////+8/rmGf////7z+cs7n////vPyr6zP///+8/8g7b////7z+wUeX////vP/TG7P///+8/Oi/y////7z9cGPb////vP5Lq+P///+8/RvL6////7z9MZ/z////vP2Jy/f///+8/IjH+////7z8Euf7////vP5QZ/////+8/Bl7/////7z9sjv/////vP46w/////+8/kMj/////7z9q2f/////vPzbl/////+8/cu3/////7z8u8//////vPyr3/////+8/7Pn/////7z/W+//////vPyb9/////+8/Dv7/////7z+u/v/////vPxr//////+8/ZP//////7z+W///////vP7j//////+8/0P//////7z/g///////vP+r//////+8/8v//////7z/2///////vP/r//////+8//P//////7z/+///////vP/7//////+8//v//////7z8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8AAAAAAADwPwAAAAAAAPA/AAAAAAAA8D8=","dtype":"float64","order":"little","shape":[400]}},"selected":{"id":"2795"},"selection_policy":{"id":"2794"}},"id":"2758","type":"ColumnDataSource"},{"attributes":{"line_alpha":0.1,"line_color":"#1f77b4","line_width":2,"x":{"field":"x"},"y":{"field":"y_p"}},"id":"2766","type":"Line"},{"attributes":{"bottom_units":"screen","fill_alpha":0.5,"fill_color":"lightgrey","left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"2715","type":"BoxAnnotation"},{"attributes":{"axis":{"id":"2738"},"dimension":1,"ticker":null},"id":"2741","type":"Grid"},{"attributes":{"bottom_units":"screen","fill_alpha":0.5,"fill_color":"lightgrey","left_units":"screen","level":"overlay","line_alpha":1.0,"line_color":"black","line_dash":[4,4],"line_width":2,"right_units":"screen","syncable":false,"top_units":"screen"},"id":"2748","type":"BoxAnnotation"},{"attributes":{"children":[{"id":"2772"},{"id":"2770"},{"id":"2774"}]},"id":"2780","type":"Row"},{"attributes":{},"id":"2801","type":"AllLabels"},{"attributes":{"end":1.0,"js_property_callbacks":{"change:value":[{"id":"2769"}]},"start":0,"step":0.01,"title":"\\u00b5","value":0},"id":"2770","type":"Slider"},{"attributes":{"data_source":{"id":"2758"},"glyph":{"id":"2760"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"2761"},"view":{"id":"2763"}},"id":"2762","type":"GlyphRenderer"},{"attributes":{},"id":"2802","type":"BasicTickFormatter"},{"attributes":{"text":" "},"id":"2724","type":"Title"},{"attributes":{"js_property_callbacks":{"change:end":[{"id":"2769"}],"change:start":[{"id":"2769"}]},"range_padding":0},"id":"2693","type":"DataRange1d"},{"attributes":{},"id":"2746","type":"ResetTool"},{"attributes":{"children":[[{"id":"2690"},0,0],[{"id":"2783"},0,1],[{"id":"2723"},0,2]]},"id":"2810","type":"GridBox"},{"attributes":{"overlay":{"id":"2748"}},"id":"2744","type":"BoxZoomTool"},{"attributes":{"line_alpha":0.1,"line_color":"#1f77b4","line_width":2,"x":{"field":"x"},"y":{"field":"y_c"}},"id":"2761","type":"Line"},{"attributes":{},"id":"2799","type":"BasicTickFormatter"},{"attributes":{},"id":"2699","type":"LinearScale"},{"attributes":{},"id":"2730","type":"LinearScale"},{"attributes":{"background_fill_alpha":0,"below":[{"id":"2701"}],"border_fill_alpha":0,"center":[{"id":"2704"},{"id":"2708"}],"frame_height":175,"frame_width":300,"left":[{"id":"2705"}],"renderers":[{"id":"2767"}],"title":{"id":"2691"},"toolbar":{"id":"2716"},"toolbar_location":null,"x_range":{"id":"2693"},"x_scale":{"id":"2697"},"y_range":{"id":"2695"},"y_scale":{"id":"2699"}},"id":"2690","subtype":"Figure","type":"Plot"},{"attributes":{"js_property_callbacks":{"change:value":[{"id":"2776"}]},"value":"0","width":70},"id":"2772","type":"TextInput"},{"attributes":{},"id":"2695","type":"DataRange1d"},{"attributes":{"toolbars":[{"id":"2716"},{"id":"2749"}],"tools":[{"id":"2709"},{"id":"2710"},{"id":"2711"},{"id":"2712"},{"id":"2713"},{"id":"2714"},{"id":"2742"},{"id":"2743"},{"id":"2744"},{"id":"2745"},{"id":"2746"},{"id":"2747"}]},"id":"2811","type":"ProxyToolbar"},{"attributes":{"toolbar":{"id":"2811"}},"id":"2812","type":"ToolbarBox"},{"attributes":{},"id":"2702","type":"BasicTicker"},{"attributes":{"line_color":"#1f77b4","line_width":2,"x":{"field":"x"},"y":{"field":"y_c"}},"id":"2760","type":"Line"},{"attributes":{},"id":"2710","type":"WheelZoomTool"},{"attributes":{"source":{"id":"2758"}},"id":"2763","type":"CDSView"},{"attributes":{},"id":"2794","type":"UnionRenderers"},{"attributes":{"js_property_callbacks":{"change:value":[{"id":"2777"}]},"value":"1.0","width":70},"id":"2774","type":"TextInput"},{"attributes":{"axis_label":"y","formatter":{"id":"2802"},"major_label_policy":{"id":"2801"},"ticker":{"id":"2735"}},"id":"2734","type":"LinearAxis"},{"attributes":{"overlay":{"id":"2715"}},"id":"2711","type":"BoxZoomTool"},{"attributes":{},"id":"2739","type":"BasicTicker"},{"attributes":{},"id":"2795","type":"Selection"},{"attributes":{},"id":"2743","type":"WheelZoomTool"},{"attributes":{},"id":"2742","type":"PanTool"},{"attributes":{},"id":"2735","type":"BasicTicker"},{"attributes":{"axis":{"id":"2734"},"ticker":null},"id":"2737","type":"Grid"},{"attributes":{"data":{"x":{"__ndarray__":"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","dtype":"float64","order":"little","shape":[400]},"y_p":{"__ndarray__":"5UPJgFbqD0D8qOWFFOAPQH0+/1hiwQ9Avxz4BXuOD0CTZKsjwEcPQMqMXpy47Q5AKQA4AQ+BDkC1CStwjwIOQNw+nxUlcw1A1Di7VNfTDEBvzp6ixiUMQJ0R+SEpagtAJdg8DUeiCkCePED+ds8JQLDwTiIa8whAjQqlaZgOCEDBsOrAXCMHQBf1pGLRMgZALTmrTVw+BUDa65HsW0cEQN3Dq/gjTwNAXinLofpWAkDRNVgCFmABQDnOpuWZawBAAEKMySv1/j8weqK4Bxz9PzMOQniNTfs/lHxWYFOL+T9UtsBAv9b3P30OAwgGMfY/dYFsByyb9D+MRUXJBRbzP6pUzWs5ovE/pICLckBA8D/9pvL80+DtP66YB7q6Zes/90Y+uzkP6T+y34y7Ed3mP1kBUPfFzuQ/TuPXwKLj4j9R2dQnxBrhP6ZgADM55t4/Nte7w/bW2z8WOVjyJQXZP1Zo4hb+bdY/WTARVpQO1D9JavRD5uPRP94eG2PH1c8/sahEMO9AzD85RYU0IAPJP6DeeC5LFsY/B9kFpIF0wz9UYrJgABjBP0KcUmlw9r0/6KIcFKoxuj+5FlTVhte2P2vDsSZp3rM/wCgkakI9sT/vbIETLNetP6PPX/P0wqk/spw5wDAvpj9xUbxLUA6jP6syV2DcU6A/hfq6Adjomz8NBDjNMcuXP8jebU7lO5Q/H94dxOEpkT9MFdMrkwuNP0xJb3epg4g/mx8C9WWjhD/ROSTN3FSBP//tXSM6CX0/QdH9zfFCeD9P9PUIoDh0Pyos2c+5z3A/WY6z9BPiaz8Kk9aSrxBnP8Pg4b4nCGM/aeIguy5UXz/Zr3U2jbhZP+a0MBtWEFU/rsCltOc0UT/pmQZEhQpMP0KKkkqdykY/JJPdS2d6Qj/G4au/FeM9P46fbsYCHDg/2Blz815mMz+cA/G/bCQvP2q028Xv7ig/TERapYbpIz9oMKVqhLkfP9UKpep5NRk/cm3Tgij7Ez/+sx9eaZgPPyZuKgvo6gg/LYf30RWaAz8pbC3zU8P+Pni0TiI4FPg+sx2bk8jM8j7ytEEwaUjtPq7Tm8eRv+Y+SOQBhKyg4T4AXCcmLUDbPgR6iPe6AtU+ZOXEl6so0D5sb4dk48rIPg7iaRLL+MI+l6FWjWv2vD5tCTVZQQ22PtaqFIFyv7A+XUx9BRpgqT7imTyj6iyjPi0eLZNv6Jw+I7cmtUO8lT6yJv/nLU2QPmbx3kIIZIg+Gxlogoczgj5sUrwRxxh7PuYAHt6IHnQ+5XxNKlHNbT7ckDMzWQRmPjfcG0WLOWA+3Tkng07aVz5pevKFT31RPhCOg+ZLlUk+3aVaYA2qQj5TgGcqLio7PlKK6GkBuDM+s/djL0GOLD6EZHoj4Z8kPsDFN2u3tx0+HPfVVC5bFT4n95FWHJ4OPtyfljqE5AU+glwfhbo6/z0/I9qI2Tf2PbO6sLHuiO89vE4R3LJS5j3GdWIkYobfPWbKgChCNNY9IfS2cCgzzz2xteT8cN3FPVRG2nu+kb49U1O14dRQtT3nd2zc6qatPX/I1qOOkqQ9vNHKxIF5nD1MGWHMFqiTPZsxnJYQEos9Jp7+xvqXgj3DGoLPdnp5PTCC9CmPaXE9rPVKEnO9Zz0ib2cjnCRgPVQ9GpIr5lU9tN0bbBKiTT0LkcoQuf9DPSL7LFwa7To9KfwkAbsUMj0awZUyzTgoPR0LHUf6LiA9IKt7TkCSFT2KS/NIPa4MPZBCtoHGBAM93Y5jivIo+TzPUGr7s5nwPIFEAHfK2eU8VyWv74Gw3DwGjRBpesnSPEEWmnQSi8g8EZvKhJH7vzweSQJoScm0PIO12kJ+86o8VEuPI6ltoTwxW09Z63uWPNiYaxD97ow82ZKbLd+RgjzI3Cax18Z3PNHHOFkEXm484q1XfvdXYzxLe5/A3pRYPCJqKXXMKE88jun8EvuyQzz+W57MZ9g4PNUCGOncQS88K8simdacIzwSrHYN7YwYPBZ5hF6Hpw48RUJ7LwYXAzxdMQ/xe7f3OzF9M2IXZO07UJf/Omsq4jvdNfzgJWbWO/aBVI2vjMs7KsWZ0FLmwDttoaqWd660OzXg8rIAP6k7Qj23jqW9njs0lF98MquSO39Y/+YynoY7ZGKNYndVezuvn1qNnXlwO4cZXZpyz2M72IpvrNTCVztxll4/mm1MO2NMOWeZ9kA7u3qaY4QxNDuHWeNJdPonO+v4ZwO2Zhw7wN+sThrHEDuGYfXt2MUDO2YuuZx/Pvc6ivc5O5tB6zrPIBNdeOHfOgL/MccemdI6NzWb0wGlxTpQo7i5dSC5OlwWt/GXGK06Nc0c+szNoDptJmDEYlyTOj2SMfw+QIY61yBa0h6CeTp43i7ARyttOryY0fnAomA64x/FFYjtUjqDmcdjUntFOpoNI+qpUTg6Viw48UB2KzolbaDA5+4eOgBciU/AYBE6R4FXBvl5AzogwVubC8b1OYYAClbXR+g5VZ2YsSMC2znhqOIVlvfNOQibZWxTlcA5h5wY0MpOsjkyLhChLimkOe1pQqNTJZY5hi2Omd9DiDk9CMTnQoV6OS6PDUqy6Ww5P2IQvSBxXzmiiuzZnA1ROcul6tytc0I5StTsz0nqMzkY2acpzHAlOTfSEb9jBhc5PxFshhGqCDmpcx/bp1r6OC1w207KFuw4LBO+Eu7c3ThRj0kBW6vPOMp2zKcWwMA4u4DU9KussTg3AFi9U5qiOLgKuQ/jh5M4Uo2p3h90hDh/ItN6w111ONMev1R9Q2Y4vSWL//UjVzhJn3Vr0v1HOOY96k23zzg4zcl6q0yYKTiRoyR3QVYaOA2xbzlPCAs4VHpesT2t+zfb4tZg5kPsN22lIvY3y9w3cipphDlCzTfjSpF9Dai9Nzsr0GD0+603tn1GEk89njfeq2rRoGuON7rUlMWQhn43aXvJGeuNbjeD5M6ioYFeN4S1pAzMYU43rL+RjqcuPjd0zhwnlugtN+Z7XmMdkB03eskft+QlDTcnOB9ts6r8No+ekjhuH+w2HsyEchSF2zZrYPsOvdzKNvdd3FaTJ7o2hk5PdNNmqTZNJdDfxpuYNiSgWbzAx4c2tjPyMBrsdjZqf4TNLgpmNuURRwhZI1U2tsEU4O44RDZ3FP6uPkwzNkKeFTeMXiI2kZwN8g1xETbMQbaq6oQANqAzp8tuNu81LadDPOtp3TXLyYCrI6bLNZbEUfvE7Lk1QdarZE4/qDXby7CWEJ+WNVCzp3QtDYU12SJ2aZiKczX/VWBFFxhiNUXwQplDtlA10DaCAhnLPjUyRQqgcUwsNdzTXRbT8Bk17HC9Ujm4BzXhD9wEYKL1NNHLqMXIruM0Xq/GZ8Hc0TT0dNFWaivANBKNZdl5M6004klvTSNNmjR0NWtNTKGHNBCjn95FLXU0tOd1mkHuYjS3LVbEW+FQNJGgRiNJBz40qCO2L1GkKjQJf4ez8JMXNJSDIOJd0AQ0eynhq+9T8jMaDSyTJxngMxQkC69zNcwzu80mGCinuDOOSL1lxH2lM8NBs/IksJIzsPi7aa81gDN1LMH8qgxsM7/WqE4rNVgzdfU+NvTWRDMgkoKdLOUxM/jYG84MqB4zESNjuGkxCjNpd6rzwlL2MnpBrP8++uIyFJW7Or0X0DIBu2gsdDm7Mg7gXWpl+KYyXcvR4RBVkzJlasVXyTqAMsrBmSx1Lmsyic8Dc2i0VjLqEliN7epCMrRY44cNci8yEJdCerkRGjLBON88044FMhIz2KtUyPExvouhSlhD3TGQ7eljbwTIMdeIKSaYqbMxcKt7hI4OoDEr3wRRtyiKMTFUT3tKQXUxhv8mzh86YTGxQEffzdpLMSld4/59djYx5fIPCbsRIjG1eyiqQf8MMetqwpVhNfcw1gzvz2SH4jBomV4D64LNMPd3b0lacbcwMx8uOUuTojDj7nY7/1yNMP/iV8tjJncwDB0a8aE0YjBLS2NBCZBMMFE+tWSCWTYwHSWP5bhxITC/n45uoSkLMIpQB8g0GPUvJaxNBEpX4C/Vo5Cg70DJL6+13aP7drMv0T7VvjLunS8NMKfcMfSGLzxd8PUvj3EvtwjhCTnMWi/Z1tV+pWVEL/50knLy+C4vfyT0Z9p0Fy9rsSHvQrgBL0u36/56tOouHTuT35wS1C52LDFDcxm+LprgQj29gqYuMr4AQAPLkC4Tc2qNC/54LhhXrA0HjWIuuqJNT1t4Sy6LLTBKsEk0Lumm0qhC5B0uDX98ai/3BS4=","dtype":"float64","order":"little","shape":[400]}},"selected":{"id":"2792"},"selection_policy":{"id":"2791"}},"id":"2757","type":"ColumnDataSource"},{"attributes":{"js_property_callbacks":{"change:value":[{"id":"2779"}]},"value":"1","width":70},"id":"2775","type":"TextInput"},{"attributes":{},"id":"2798","type":"AllLabels"},{"attributes":{"axis_label":"CDF","formatter":{"id":"2799"},"major_label_policy":{"id":"2798"},"ticker":{"id":"2739"}},"id":"2738","type":"LinearAxis"},{"attributes":{"active_multi":null,"tools":[{"id":"2709"},{"id":"2710"},{"id":"2711"},{"id":"2712"},{"id":"2713"},{"id":"2714"}]},"id":"2716","type":"Toolbar"},{"attributes":{},"id":"2789","type":"BasicTickFormatter"},{"attributes":{},"id":"2788","type":"AllLabels"},{"attributes":{"end":1.05,"start":-0.05},"id":"2756","type":"Range1d"},{"attributes":{"line_color":"#1f77b4","line_width":2,"x":{"field":"x"},"y":{"field":"y_p"}},"id":"2765","type":"Line"},{"attributes":{"children":[{"id":"2782"},{"id":"2814"},{"id":"2813"}]},"id":"2815","type":"Column"},{"attributes":{"args":{"arg1":{"id":"2770"},"arg2":{"id":"2771"},"arg3":{"id":"2770"},"discrete":false,"dist":"halfnormal","n":400,"source_c":{"id":"2758"},"source_p":{"id":"2757"},"xrange":{"id":"2693"}},"code":"function linspace(start, stop, n) {\\n\\tvar x = [];\\n\\tvar currValue = start;\\n\\tvar step = (stop - start) / (n - 1);\\n\\tfor (var i = 0; i &lt; n; i++) {\\n\\t\\tx.push(currValue);\\n\\t\\tcurrValue += step;\\n\\t}\\n\\treturn x;\\n}\\n\\nfunction update_y_p(probFun, x_p, arg1, arg2, arg3) {\\n    // Compute PMF/PDF\\n    var y_p = [];\\n    for (var i = 0; i &lt; x_p.length; i++) {\\n      y_p.push(probFun(x_p[i], arg1, arg2, arg3));\\n    }\\n\\n    return y_p;\\n}\\n\\nfunction update_y_c_continuous(cdfFun, x_c, arg1, arg2, arg3) {\\n    var y_c = [];\\n    for (var i = 0; i &lt; x_c.length; i ++)\\n        y_c.push(cdfFun(x_c[i], arg1, arg2, arg3));\\n\\n    return y_c;\\n}\\n\\nfunction erf(x) {\\n    // Error function using polynomial approximation (accurate to about 10^-7)\\n    var a = [1.00002368,\\n             0.37409196,\\n             0.09678418,\\n             -0.18628806,\\n             0.27886807,\\n             -1.13520398,\\n             1.48851587,\\n             -0.82215223,\\n             0.17087277];\\n\\n    var t = 1 / (1 + Math.abs(x)/2);\\n    var expSum = -Math.pow(x, 2) - 1.26551223;\\n\\n    for (var i = 0; i &lt; a.length; i++) {\\n        expSum += a[i] * Math.pow(t, i+1);\\n    }\\n\\n    var result = 1 - t * Math.exp(expSum);\\n\\n    if (x &lt; 0) return -result;\\n    return result;\\n}\\n\\n\\n\\nfunction probFun(x, mu, sigma, {}) {\\n    if (x &lt; mu) return NaN;\\n\\n    var expTerm = (Math.pow(x - mu, 2) / 2.0 / Math.pow(sigma, 2));\\n    return Math.exp(-expTerm) / sigma * Math.sqrt(2.0 / Math.PI);\\n}\\n\\nfunction cdfFun(x, mu, sigma, {}) {\\n    if (x &lt; mu) return 0.0;\\n\\n    return erf((x - mu) / sigma / Math.sqrt(2));\\n}\\n\\n// Extract data from sources\\nvar data_p = source_p.data;\\nvar data_c = source_c.data;\\nvar x_p = data_p[&#x27;x&#x27;];\\nvar y_p = data_p[&#x27;y_p&#x27;];\\nvar x_c = data_c[&#x27;x&#x27;];\\nvar y_c = data_c[&#x27;y_c&#x27;];\\nvar xRangeMin = xrange.start;\\nvar xRangeMax = xrange.end;\\n\\n// Make corrections for start and end points based on support\\n// We&#x27;re not doing this now because we want to allow zooming\\n// JS codes now make anything outside of support NaN.\\n// if (dist == &#x27;lognormal&#x27; \\n//     || dist == &#x27;gamma&#x27; \\n//     || dist == &#x27;exponential&#x27; \\n//     || dist == &#x27;inv_gamma&#x27;\\n//     || dist == &#x27;weibull&#x27;) {\\n// \\txRangeMin = 0.0;\\n// }\\n// else if (dist == &#x27;beta&#x27;) { \\n//     xRangeMin = 0.0;\\n//     xRangeMax = 1.0;\\n// }\\n\\n// x-values to evaluate PDF and CDF\\nx_p = linspace(xRangeMin, xRangeMax, n);\\nx_c = x_p;\\n\\n// Update sources with new x-values\\nsource_p.data[&#x27;x&#x27;] = x_p;\\nsource_c.data[&#x27;x&#x27;] = x_c;\\n\\n// Update the PDF and CDF\\nsource_p.data[&#x27;y_p&#x27;] = update_y_p(probFun, \\n    x_p, arg1.value, arg2.value, arg3.value);\\nsource_c.data[&#x27;y_c&#x27;] = update_y_c_continuous(cdfFun, \\n    x_c, arg1.value, arg2.value, arg3.value);\\n\\nsource_p.change.emit();\\nsource_c.change.emit();\\n"},"id":"2769","type":"CustomJS"},{"attributes":{"axis_label":"y","formatter":{"id":"2789"},"major_label_policy":{"id":"2788"},"ticker":{"id":"2702"}},"id":"2701","type":"LinearAxis"},{"attributes":{"children":[{"id":"2773"},{"id":"2771"},{"id":"2775"}]},"id":"2781","type":"Row"},{"attributes":{"axis":{"id":"2701"},"ticker":null},"id":"2704","type":"Grid"},{"attributes":{},"id":"2791","type":"UnionRenderers"},{"attributes":{},"id":"2697","type":"LinearScale"},{"attributes":{"width":30},"id":"2783","type":"Spacer"},{"attributes":{},"id":"2709","type":"PanTool"},{"attributes":{"height":10},"id":"2814","type":"Spacer"},{"attributes":{"data_source":{"id":"2757"},"glyph":{"id":"2765"},"hover_glyph":null,"muted_glyph":null,"nonselection_glyph":{"id":"2766"},"view":{"id":"2768"}},"id":"2767","type":"GlyphRenderer"},{"attributes":{"args":{"max_value":"Infinity","min_value":"0","slider":{"id":"2771"}},"code":"\\nslider.end = Math.min(max_value, Number(cb_obj.value));\\n"},"id":"2779","type":"CustomJS"},{"attributes":{},"id":"2785","type":"AllLabels"},{"attributes":{},"id":"2714","type":"HelpTool"},{"attributes":{"args":{"max_value":"Infinity","min_value":"-Infinity","slider":{"id":"2770"}},"code":"\\nslider.end = Math.min(max_value, Number(cb_obj.value));\\n"},"id":"2777","type":"CustomJS"},{"attributes":{"axis":{"id":"2705"},"dimension":1,"ticker":null},"id":"2708","type":"Grid"},{"attributes":{},"id":"2786","type":"BasicTickFormatter"},{"attributes":{},"id":"2713","type":"ResetTool"},{"attributes":{"children":[{"id":"2780"},{"id":"2781"}]},"id":"2782","type":"Column"},{"attributes":{"js_property_callbacks":{"change:value":[{"id":"2778"}]},"value":"0","width":70},"id":"2773","type":"TextInput"},{"attributes":{},"id":"2706","type":"BasicTicker"},{"attributes":{"args":{"max_value":"Infinity","min_value":"0","slider":{"id":"2771"}},"code":"\\n    slider.start = Math.max(min_value, Number(cb_obj.value));\\n"},"id":"2778","type":"CustomJS"},{"attributes":{"end":1,"js_property_callbacks":{"change:value":[{"id":"2769"}]},"start":0,"step":0.01,"title":"\\u03c3","value":0.2},"id":"2771","type":"Slider"},{"attributes":{"axis_label":"PDF","formatter":{"id":"2786"},"major_label_policy":{"id":"2785"},"ticker":{"id":"2706"}},"id":"2705","type":"LinearAxis"},{"attributes":{"text":"Half-Normal"},"id":"2691","type":"Title"},{"attributes":{},"id":"2712","type":"SaveTool"},{"attributes":{"source":{"id":"2757"}},"id":"2768","type":"CDSView"}],"root_ids":["2815"]},"title":"Bokeh Application","version":"2.3.3"}}';
                  var render_items = [{"docid":"00500176-509a-42cb-8902-d0f5c2499523","root_ids":["2815"],"roots":{"2815":"058d5518-0a46-4ac2-87d0-b19742b37c4d"}}];
                  root.Bokeh.embed.embed_items(docs_json, render_items);
                
                  }
                  if (root.Bokeh !== undefined) {
                    embed_document(root);
                  } else {
                    var attempts = 0;
                    var timer = setInterval(function(root) {
                      if (root.Bokeh !== undefined) {
                        clearInterval(timer);
                        embed_document(root);
                      } else {
                        attempts++;
                        if (attempts > 100) {
                          clearInterval(timer);
                          console.log("Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing");
                        }
                      }
                    }, 10, root)
                  }
                })(window);
              });
            };
            if (document.readyState != "loading") fn();
            else document.addEventListener("DOMContentLoaded", fn);
          })();
        },
        function(Bokeh) {
        
        
        }
      ];
    
      function run_inline_js() {
        
        for (var i = 0; i < inline_js.length; i++) {
          inline_js[i].call(root, root.Bokeh);
        }
        
      }
    
      if (root._bokeh_is_loading === 0) {
        console.debug("Bokeh: BokehJS loaded, going straight to plotting");
        run_inline_js();
      } else {
        load_libs(css_urls, js_urls, function() {
          console.debug("Bokeh: BokehJS plotting callback run at", now());
          run_inline_js();
        });
      }
    }(window));
  };
  if (document.readyState != "loading") fn();
  else document.addEventListener("DOMContentLoaded", fn);
})();